{"version":3,"file":"planner-lazy.min.js","sources":["../src/planner-lazy.js"],"sourcesContent":["import Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {loadFragment} from 'core/fragment';\nimport Yui from 'core/yui';\nimport {get_string as getString} from 'core/str';\nimport {makeLoggingFunction} from 'lytix_logs/logs';\nimport Log from 'core/log';\nimport ModalType from 'lytix_planner/modal_save_delete_cancel-lazy';\nimport Widget, {getStrings} from 'lytix_helper/widget';\n\nconst svgcontainer = document.getElementById('PlannerWidget');\nconst plannerLeft = document.getElementById('planner_left');\nconst plannerRight = document.getElementById('planner_right');\nconst plannerLegend = document.getElementById('planner_legend');\nconst plannerOptions = document.getElementById('planner_options');\nconst plannerActions = document.getElementById('planner_actions');\nconst plannerMenu = document.getElementById('planner_menu');\n\n// Namespace for svgs\nconst NS = 'http://www.w3.org/2000/svg';\n\nlet svgElement = null;\nlet svgHeight = 350;\nlet svgWidth = 600;\nlet mobileSvgHeight = 600;\n\nlet log; // Will be the logging function.\n\n// This will contain all translated event type names as property names, and the corresponding language string as value.\nconst eventStrings = {};\n\nconst planner = {\n    contextid: -1,\n    courseid: -1,\n    userid: -1,\n    isteacher: -1,\n    strings: null,\n    locale: 'default',\n\n    isresizing: false,\n\n    paddingleft: 15,\n    paddingright: 15,\n    padding: 4,\n    barHeight: 20,\n    days: 0,\n    months: 0,\n    weeks: 0,\n    startDate: null,\n    endDate: null,\n    yearStartDate: null,\n    daysWidth: 0,\n    monthWidth: 0,\n    weekWidth: 0,\n    weekHeight: 0,\n    data: null,\n    showMonthFlag: false,\n\n    primaryMarkerColour: '#a09e9e',\n    indicatorColour: '#888686',\n    fontColour: '#fefefe',\n    indicatorStrokeColour: '#595656',\n    stillDueColour: '#474747',\n    milestoneColour: '#df3540',\n    completedColour: '#b2c204',\n    thresholdColour: '#f9a606',\n\n    view: null,\n    inactiveMonths: [],\n    activeMonths: [],\n    currentMonth: null,\n    weeksInMonth: new Map(),\n    daysInWeek: new Map(),\n    autoScrolling: false,\n\n    includeTypes: null,\n    includedTypes: null,\n\n    storedEvents: new Map(),\n    storedMilestones: new Map(),\n\n    dateFormatter: null,\n    timeFormatter: null,\n\n    init: function(data) {\n        if (svgcontainer !== null) {\n            // This is the width we have to work with\n            svgWidth = svgcontainer.offsetWidth;\n        }\n\n        svgcontainer.innerHTML = '';\n        plannerLeft.innerHTML = '';\n        plannerRight.innerHTML = '';\n        plannerLegend.innerHTML = '';\n        plannerOptions.innerHTML = '';\n        plannerActions.innerHTML = '';\n\n        const mobileArrows = document.getElementsByClassName('planner-mobileArrows');\n        if (mobileArrows.length > 0) {\n            mobileArrows[0].innerHTML = '';\n            mobileArrows[0].parentNode.removeChild(mobileArrows[0]);\n        }\n\n        svgElement = document.createElementNS(NS, 'svg');\n        svgElement.setAttributeNS(null, 'id', 'planner-svg');\n\n        document.addEventListener('click', (event) => {\n            if (!document.getElementById('planner-mergePopup').contains(event.target)) {\n                const mergeElements = document.getElementsByClassName('merge');\n                let merge = false;\n                mergeElements.forEach(function(element) {\n                    if (event.target === element) {\n                        merge = true;\n                    }\n                });\n                if (!merge) {\n                    this.closePopup();\n                }\n            }\n            if (!document.getElementById('planner-check').contains(event.target) && window.innerWidth < 767) {\n                const form = document.getElementById('menuform');\n                form.style.left = '-150%';\n            }\n            if (!document.getElementById('planner-infoMobile').contains(event.target) && window.innerWidth < 767) {\n                const info = document.getElementById('planner-info');\n                info.style.left = '-150%';\n            }\n        });\n\n        if (planner.isteacher) {\n            document.getElementById(\"planner_description\").innerText = planner.strings.description_teacher;\n        } else {\n            document.getElementById(\"planner_description\").innerText = planner.strings.description_student;\n        }\n\n\n        planner.data = data;\n        // Gets milliseconds since Unix Epoch\n        planner.startDate = new Date(data.startDate * 1000);\n\n        const date = new Date(data.endDate * 1000);\n        date.setHours(23);\n        date.setMinutes(59);\n\n        // Need to get the date in seconds\n        planner.endDate = date;\n\n        // Get difference in days\n        const msPerDay = 1000 * 60 * 60 * 24;\n        // Convert to UTC to respect daylight savings\n        const utcStart = Date.UTC(planner.startDate.getFullYear(), planner.startDate.getMonth(), planner.startDate.getDate());\n        const utcEnd = Date.UTC(planner.endDate.getFullYear(), planner.endDate.getMonth(), planner.endDate.getDate());\n        planner.days = Math.floor((utcEnd - utcStart) / msPerDay);\n        planner.months = planner.endDate.getMonth() - planner.startDate.getMonth() + 1\n            + (12 * (planner.endDate.getFullYear() - planner.startDate.getFullYear()));\n\n        const currentMonthIndex = new Date().getMonth();\n        // Figure out week numbers for each month\n        const copiedStartDate = new Date(planner.startDate.getTime());\n        for (let i = 0; i < planner.months; i++) {\n            const genericMonthCount = new Date(copiedStartDate.getFullYear(), (copiedStartDate.getMonth() + 1), 0).getDate();\n            const startDate = new Date(copiedStartDate.getFullYear(), copiedStartDate.getMonth(), 1);\n            const endDate = new Date(copiedStartDate.getFullYear(), copiedStartDate.getMonth(), genericMonthCount);\n            const weekNR = this.getWeek(startDate);\n            const endWeekNR = this.getWeek(endDate);\n            if (currentMonthIndex === startDate.getMonth()) {\n                planner.currentMonth = i;\n            }\n            planner.weeksInMonth.set((startDate.getMonth().toString() + startDate.getFullYear().toString()), [weekNR, endWeekNR]);\n            copiedStartDate.setMonth((copiedStartDate.getMonth() + 1), 1);\n        }\n        planner.inactiveMonths.length = 0;\n        planner.activeMonths.length = 0;\n\n        if (window.innerWidth <= 767) {\n            this.initMobile();\n        } else {\n            this.initDesktop();\n        }\n    },\n\n    initDesktop() {\n        // Don't set width so we can handle the overflow\n        svgElement.setAttributeNS(null, 'height', svgHeight);\n        svgcontainer.appendChild(svgElement);\n\n        // Create arrows on left and right for scrolling\n        let arrows = this.createArrows(plannerLeft, plannerRight, false);\n\n        // Show left and right indicators of missing events\n        this.createIndicators(plannerLeft, plannerRight);\n\n        // Need to add initial dropdown elements to right drop menu\n        let rightDrop = document.getElementById('rightArrowDropMenu');\n        if ((planner.view === '3 ' + planner.strings.months) || planner.view === null) {\n            planner.view = '3 ' + planner.strings.months;\n            planner.monthWidth = (svgWidth - (planner.padding * (2)) -\n                (planner.paddingleft + planner.paddingright)) / 3;\n            // Daywith also dependant on view\n            planner.dayWidth = (svgWidth - (planner.padding * (2)) -\n                (planner.paddingleft + planner.paddingright)) / planner.days;\n            // Show the scrollbar\n            svgcontainer.style.overflowX = 'auto';\n            // Need to set the width of the svg as it does not recognize it\n            let sWidth = planner.monthWidth * planner.months +\n                planner.paddingright +\n                planner.paddingleft +\n                planner.months * planner.padding;\n            svgElement.setAttributeNS(null, 'width', sWidth);\n\n            let pos = 0;\n            if (planner.months > (planner.currentMonth) && planner.currentMonth - 1 >= 0) {\n                // There are months to the left and right of the month\n                pos = -1;\n            } else if (planner.currentMonth - 1 >= 0) {\n                // Means there are only months to the left\n                if (planner.currentMonth - 2 >= 0) {\n                    pos = -2;\n                } else {\n                    pos = -1;\n                }\n            } else {\n                pos = 0;\n            }\n\n            const scrollToAmount = (planner.monthWidth + planner.padding) * (planner.currentMonth + pos);\n            // Move the scroll bar to the correct position\n            svgcontainer.scrollTo({\n                top: 0,\n                left: scrollToAmount,\n                behavior: 'instant',\n            });\n\n            this.addHiddenMonths();\n\n            // Add initial dropdown items, then change dynamically\n            let date = new Date(planner.startDate.getTime());\n\n            planner.activeMonths.push([date.getMonth(), date.getFullYear()]);\n            date.setMonth((date.getMonth() + 1));\n            if (planner.months > 1) {\n                planner.activeMonths.push([date.getMonth(), date.getFullYear()]);\n                date.setMonth((date.getMonth() + 1));\n                if (planner.months > 2) {\n                    planner.activeMonths.push([date.getMonth(), date.getFullYear()]);\n                    date.setMonth((date.getMonth() + 1));\n                }\n            }\n\n            let nextM = document.createElement('a');\n            nextM.setAttribute('href', '#');\n            nextM.innerText = planner.strings.next + ' >';\n            nextM.addEventListener('click', () => {\n                // Just scroll to the next month that is not in view\n                const newPos = (svgcontainer.scrollLeft / planner.monthWidth + 1).toFixed(0)\n                    * (planner.monthWidth + planner.padding);\n                svgcontainer.scrollTo({\n                    top: 0,\n                    left: newPos,\n                    behavior: 'smooth',\n                });\n            });\n            arrows[0].addEventListener('click', () => {\n                // Just scroll to the next month that is not in view\n                const newPos = (svgcontainer.scrollLeft / planner.monthWidth - 1).toFixed(0)\n                    * (planner.monthWidth + planner.padding);\n                svgcontainer.scrollTo({\n                    top: 0,\n                    left: newPos,\n                    behavior: 'smooth',\n                });\n            });\n            arrows[1].addEventListener('click', () => {\n                // Just scroll to the next month that is not in view\n                const newPos = (svgcontainer.scrollLeft / planner.monthWidth + 1).toFixed(0)\n                    * (planner.monthWidth + planner.padding);\n                svgcontainer.scrollTo({\n                    top: 0,\n                    left: newPos,\n                    behavior: 'smooth',\n                });\n            });\n\n            rightDrop.appendChild(nextM);\n\n        } else if (planner.view === planner.strings.month) {\n            planner.monthWidth = svgWidth - (planner.paddingleft + planner.paddingright);\n            // Daywidth also has to be changed depending on view\n            planner.dayWidth = (svgWidth - (planner.paddingleft + planner.paddingright)) / planner.days;\n            svgcontainer.style.overflowX = 'auto';\n            const sWidth = (planner.monthWidth + planner.padding) * planner.months +\n                planner.paddingright +\n                planner.paddingleft;\n            svgElement.setAttributeNS(null, 'width', sWidth);\n            // We should scrollTo the screen so that the current date is in the middle\n            const scrollToAmount = (planner.monthWidth + planner.padding) * (planner.currentMonth);\n            // Move the scroll bar to the correct position\n            svgcontainer.scrollTo({\n                top: 0,\n                left: scrollToAmount,\n                behavior: 'instant',\n            });\n            this.addHiddenMonths();\n\n            // Add navigation buttons\n            const date = new Date(planner.startDate.getTime());\n            planner.activeMonths.push([date.getMonth(), date.getFullYear()]);\n            date.setMonth((date.getMonth() + 1));\n            const nextM = document.createElement('a');\n            nextM.setAttribute('href', '#');\n            nextM.innerText = planner.strings.next + ' >';\n            nextM.addEventListener('click', () => {\n                // Just scroll to the next month that is not in view\n                const newPos = (svgcontainer.scrollLeft / planner.monthWidth + 1).toFixed(0)\n                    * (planner.monthWidth + planner.padding);\n                svgcontainer.scrollTo({\n                    top: 0,\n                    left: newPos,\n                    behavior: 'smooth',\n                });\n            });\n            arrows[1].addEventListener('click', () => {\n                // Just scroll to the next month that is not in view\n                const newPos = (svgcontainer.scrollLeft / planner.monthWidth + 1).toFixed(0)\n                    * (planner.monthWidth + planner.padding);\n                svgcontainer.scrollTo({\n                    top: 0,\n                    left: newPos,\n                    behavior: 'smooth',\n                });\n            });\n            arrows[0].addEventListener('click', () => {\n                // Just scroll to the next month that is not in view\n                const newPos = (svgcontainer.scrollLeft / planner.monthWidth - 1).toFixed(0)\n                    * (planner.monthWidth + planner.padding);\n                svgcontainer.scrollTo({\n                    top: 0,\n                    left: newPos,\n                    behavior: 'smooth',\n                });\n            });\n\n        } else {\n            let tooSmall = false;\n            planner.monthWidth = (svgWidth - (planner.padding * (planner.months - 1)) -\n                (planner.paddingleft + planner.paddingright)) / planner.months;\n            // Daywidth also has to be changed depending on view\n            planner.dayWidth = (svgWidth - (planner.padding * (planner.months - 1)) -\n                (planner.paddingleft + planner.paddingright)) / planner.days;\n            if (planner.monthWidth < 60) {\n                // 60px is the minimum width of a month, otherwise the month text won't be visible.\n                tooSmall = true;\n                planner.monthWidth = 60;\n                planner.dayWidth = (60 * planner.months) / planner.days;\n            }\n\n            if (!tooSmall) {\n                svgElement.setAttributeNS(null, 'width', svgWidth);\n                svgcontainer.style.overflowX = 'hidden';\n            } else {\n                const sWidth = (planner.monthWidth + planner.padding)\n                    * planner.months\n                    + planner.paddingright\n                    + planner.paddingleft;\n                svgElement.setAttributeNS(null, 'width', sWidth);\n                svgcontainer.style.overflowX = 'scroll';\n            }\n            const date = new Date(planner.startDate.getTime());\n            for (let i = 0; i < planner.months; i++) {\n                planner.activeMonths.push([date.getMonth(), date.getFullYear()]);\n                date.setMonth((date.getMonth() + 1));\n            }\n        }\n        svgcontainer.addEventListener('scroll', this.addHiddenMonths);\n    },\n    initMobile() {\n        // Get height to draw svg\n        // Don't set width so we can handle the overflow\n        svgElement.setAttributeNS(null, 'height', mobileSvgHeight);\n        planner.view = planner.strings.month;\n        const plannerView = document.getElementById('planner_view');\n\n        // Create place for arrows here\n        const arrowPlacing = document.createElement('div');\n        plannerView.prepend(arrowPlacing);\n        const leftPlace = document.createElement('div');\n\n        const rightPlace = document.createElement('div');\n        const middlePlace = document.createElement('div');\n        arrowPlacing.appendChild(middlePlace);\n        arrowPlacing.appendChild(leftPlace);\n        arrowPlacing.appendChild(rightPlace);\n        arrowPlacing.setAttribute('class', 'planner-mobileArrows');\n\n        const arrows = this.createArrows(leftPlace, rightPlace, true);\n        this.createIndicators(leftPlace, rightPlace);\n\n        svgcontainer.appendChild(svgElement);\n        let rightDrop = document.getElementById('rightArrowDropMenu');\n        // A week stretches the whole width and we have 6 weeks showing at any point\n        planner.weekWidth = svgWidth - (planner.paddingleft + planner.paddingright);\n        planner.monthWidth = planner.weekWidth;\n        // Daywidth also has to be changed depending on view\n        planner.dayWidth = planner.weekWidth / 7;\n        // Also on mobile we will have overflow per month\n        svgcontainer.style.overflowX = 'auto';\n\n        let sWidth = (planner.weekWidth + planner.padding) * planner.months +\n            planner.paddingright +\n            planner.paddingleft;\n        svgElement.setAttributeNS(null, 'width', sWidth);\n\n        // Add initial dropdown items, then change dynamically\n        const date = new Date();\n        planner.activeMonths.push([date.getMonth(), date.getFullYear()]);\n\n        // Create the heading with current month\n        this.createMobileMonth(middlePlace, date.getMonth(), date.getFullYear());\n\n        const newPos = (planner.monthWidth + planner.padding) * (planner.currentMonth);\n        svgcontainer.scrollTo({\n            top: 0,\n            left: newPos,\n            behavior: 'instant',\n        });\n\n        const nextM = document.createElement('a');\n        nextM.setAttribute('href', '#');\n        nextM.innerText = planner.strings.next + ' >';\n        nextM.addEventListener('click', () => {\n            // Just scroll to the next month that is not in view\n            const newPos = (svgcontainer.scrollLeft / planner.monthWidth + 1).toFixed(0) * (planner.monthWidth + planner.padding);\n            svgcontainer.scrollTo({\n                top: 0,\n                left: newPos,\n                behavior: 'smooth',\n            });\n        });\n        arrows[1].addEventListener('click', () => {\n            // Just scroll to the next month that is not in view\n            const newPos = (svgcontainer.scrollLeft / planner.monthWidth + 1).toFixed(0) * (planner.monthWidth + planner.padding);\n            svgcontainer.scrollTo({\n                top: 0,\n                left: newPos,\n                behavior: 'smooth',\n            });\n        });\n        arrows[0].addEventListener('click', () => {\n            // Just scroll to the next month that is not in view\n            const newPos = (svgcontainer.scrollLeft / planner.monthWidth - 1).toFixed(0) * (planner.monthWidth + planner.padding);\n            svgcontainer.scrollTo({\n                top: 0,\n                left: newPos,\n                behavior: 'smooth',\n            });\n        });\n        rightDrop.appendChild(nextM);\n        this.addHiddenMonths();\n        svgcontainer.addEventListener('scroll', this.addHiddenMonths);\n    },\n\n    getType: function(a) {\n        return a.type;\n    },\n    createArrows: function(plannerLeft, plannerRight, mobile) {\n        // Create arrows for navigation\n        const leftArrow = document.createElementNS(NS, 'svg');\n        leftArrow.setAttributeNS(null, 'width', 45);\n        leftArrow.setAttributeNS(null, 'height', 43);\n        leftArrow.setAttributeNS(null, 'fill', 'none');\n        leftArrow.setAttributeNS(null, 'id', 'leftArrow');\n\n        const drawing = document.createElementNS(NS, 'path');\n        drawing.setAttributeNS(null, 'd', 'M3.54082 22.8031C2.07838 22.0621 2.07979 19.9729 3.54323 19.2339L33.1014 ' +\n            '4.30629C34.4322 3.63422 36.004 4.60203 36.003 6.09289L35.9829 35.9877C35.9819 37.4786 34.4088 38.4443 ' +\n            '33.0789 37.7704L3.54082 22.8031Z');\n\n        drawing.setAttributeNS(null, 'fill', planner.indicatorColour);\n        leftArrow.appendChild(drawing);\n\n        leftArrow.style.position = 'absolute';\n        leftArrow.style.bottom = '0px';\n        leftArrow.style.left = '0px';\n\n        let dropContainer = document.createElement('div');\n        dropContainer.setAttribute('class', 'dropdown');\n\n        const leftButton = document.createElement('button');\n        leftButton.setAttribute('width', leftArrow.getAttribute('width'));\n        leftButton.setAttribute('height', 43);\n        leftButton.setAttribute('type', 'button');\n\n        let dropMenu = document.createElement('div');\n        dropMenu.setAttribute('class', 'dropdown-content');\n        if (mobile) {\n            dropMenu.setAttribute('class', 'dropdown-content mobile');\n        }\n        dropMenu.setAttribute('id', 'leftArrowDropMenu');\n\n        dropContainer.style.position = 'absolute';\n        dropContainer.style.bottom = '0px';\n        dropContainer.style.left = '0px';\n\n        leftButton.style.padding = '0px';\n        leftButton.style.border = 'none';\n\n        leftButton.appendChild(dropMenu);\n        leftButton.appendChild(leftArrow);\n        dropContainer.appendChild(leftButton);\n\n        plannerLeft.appendChild(dropContainer);\n\n        const rightArrow = document.createElementNS(NS, 'svg');\n        rightArrow.setAttributeNS(null, 'width', 45);\n        rightArrow.setAttributeNS(null, 'height', 43);\n        rightArrow.setAttributeNS(null, 'fill', 'none');\n        rightArrow.setAttributeNS(null, 'id', 'rightArrow');\n        const drawingRight = document.createElementNS(NS, 'path');\n        drawingRight.setAttributeNS(null, 'd', 'M44.5203 19.2726C45.9851 20.009 45.9903 22.0982 44.5293' +\n            ' 22.8419L15.0188 37.8636C13.6902 38.5399 12.1153 37.5771 12.1115 36.0863L12.0364 6.19149C12.0326' +\n            ' 4.70064 13.6027 3.72993 14.9347 4.39955L44.5203 19.2726Z');\n\n        drawingRight.setAttributeNS(null, 'fill', planner.indicatorColour);\n        rightArrow.appendChild(drawingRight);\n        rightArrow.style.position = 'absolute';\n        rightArrow.style.bottom = '0px';\n        rightArrow.style.right = '0px';\n\n        dropContainer = document.createElement('div');\n        dropContainer.setAttribute('class', 'dropdown');\n\n        const rightButton = document.createElement('button');\n        rightButton.setAttribute('width', rightArrow.getAttribute('width'));\n        rightButton.setAttribute('height', 43);\n        rightButton.setAttribute('type', 'button');\n\n        dropMenu = document.createElement('div');\n        dropMenu.setAttribute('class', 'dropdown-content');\n        if (mobile) {\n            dropMenu.setAttribute('class', 'dropdown-content mobile');\n        }\n        dropMenu.setAttribute('id', 'rightArrowDropMenu');\n\n        dropMenu.style.right = '0px';\n\n        dropContainer.style.position = 'absolute';\n        dropContainer.style.bottom = '0px';\n        dropContainer.style.right = '0px';\n        rightButton.style.padding = '0px';\n        rightButton.style.border = 'none';\n\n        rightButton.appendChild(dropMenu);\n        rightButton.appendChild(rightArrow);\n        dropContainer.appendChild(rightButton);\n        plannerRight.appendChild(dropContainer);\n\n        return [leftArrow, rightArrow];\n    },\n    createIndicators: function(plannerLeft, plannerRight) {\n        const leftIndicator = document.createElementNS(NS, 'svg');\n        leftIndicator.setAttributeNS(null, 'height', 25);\n        leftIndicator.setAttributeNS(null, 'width', 25);\n        leftIndicator.style.position = 'absolute';\n        leftIndicator.style.left = '0';\n        leftIndicator.style.bottom = '40px';\n        const rightIndicator = document.createElementNS(NS, 'svg');\n        rightIndicator.setAttributeNS(null, 'height', 25);\n        rightIndicator.setAttributeNS(null, 'width', 25);\n        rightIndicator.style.position = 'absolute';\n        rightIndicator.style.right = '0px';\n        rightIndicator.style.bottom = '40px';\n\n        // Create a group for text and rect inside the svg\n        let leftGroup = document.createElementNS(NS, 'g');\n        let rightGroup = document.createElementNS(NS, 'g');\n        leftIndicator.appendChild(leftGroup);\n        rightIndicator.appendChild(rightGroup);\n\n        let indicator = document.createElementNS(NS, 'rect');\n        indicator.setAttributeNS(null, 'x', 1);\n        indicator.setAttributeNS(null, 'y', 1);\n        indicator.setAttributeNS(null, 'height', 22);\n        indicator.setAttributeNS(null, 'width', 22);\n        indicator.setAttributeNS(null, 'rx', 4);\n        indicator.style.fill = planner.indicatorColour;\n        indicator.style.stroke = planner.indicatorStrokeColour;\n        indicator.style.strokeWidth = 2;\n\n        // Create textelement for inside\n        let leftText = document.createElementNS(NS, 'text');\n        // These sizes and positions work for up to two digits only\n        leftText.setAttributeNS(null, 'id', 'leftText');\n        leftText.setAttributeNS(null, 'x', 12);\n        leftText.setAttributeNS(null, 'y', 18);\n        leftText.setAttributeNS(null, 'dy', '0px');\n        leftText.style.cssText += 'text-anchor:middle;font-weight:bold;font-family:sans-serif';\n        leftText.setAttributeNS(null, 'fill', planner.fontColour);\n        leftGroup.appendChild(indicator);\n        leftGroup.appendChild(leftText);\n\n        indicator = document.createElementNS(NS, 'rect');\n        indicator.setAttributeNS(null, 'x', 1);\n        indicator.setAttributeNS(null, 'y', 1);\n        indicator.setAttributeNS(null, 'height', 22);\n        indicator.setAttributeNS(null, 'width', 22);\n        indicator.setAttributeNS(null, 'rx', 4);\n        indicator.style.fill = planner.indicatorColour;\n        indicator.style.stroke = planner.indicatorStrokeColour;\n        indicator.style.strokeWidth = 2;\n\n        let rightText = document.createElementNS(NS, 'text');\n        // RightText sizes and positions work for up to two digits only\n        rightText.setAttributeNS(null, 'id', 'rightText');\n        rightText.setAttributeNS(null, 'x', 12);\n        rightText.setAttributeNS(null, 'y', 18);\n        rightText.setAttributeNS(null, 'dy', '0px');\n        rightText.style.cssText += 'text-anchor:middle;font-weight:bold;font-family:sans-serif';\n        rightText.setAttributeNS(null, 'fill', planner.fontColour);\n\n        rightGroup.appendChild(indicator);\n        rightGroup.appendChild(rightText);\n\n        plannerLeft.appendChild(leftIndicator);\n        plannerRight.appendChild(rightIndicator);\n    },\n\n    createMobileMonth: function(area, month, year) {\n        const monthText = document.createElement('h2');\n        const current = new Date(year, month);\n        monthText.innerText = current.toLocaleString(planner.locale, {month: 'long', year: 'numeric'});\n        monthText.setAttribute('class', 'planner-mobileMonth');\n        monthText.setAttribute('id', 'mobileMonth');\n        area.appendChild(monthText);\n        return monthText;\n    },\n    addHiddenMonths: function() {\n        // Depending on the display type, we may have hidden months on left and right that need to go into the dropdown\n        if (planner.view === 'SEMESTER') {\n            return;\n        }\n        const mobile = (window.innerWidth < 767);\n        const date = new Date(planner.startDate.getTime());\n        const scrollPos = svgcontainer.scrollLeft;\n        const rightDropMenu = document.getElementById('rightArrowDropMenu');\n        const leftDropMenu = document.getElementById('leftArrowDropMenu');\n        // Removing all children to add accurate ones\n        const nextM = document.createElement('a');\n        nextM.innerText = planner.strings.next + ' >';\n        nextM.addEventListener('click', () => {\n            // Just scroll to the next month that is not in view\n            let newPos = (svgcontainer.scrollLeft / planner.monthWidth + 1).toFixed(0) * (planner.monthWidth + planner.padding);\n            svgcontainer.scrollTo({\n                top: 0,\n                left: newPos,\n                behavior: 'smooth',\n            });\n        });\n        rightDropMenu.appendChild(nextM);\n        let child = rightDropMenu.lastElementChild;\n        while (child !== rightDropMenu.firstElementChild) {\n            rightDropMenu.removeChild(child);\n            child = rightDropMenu.lastElementChild;\n        }\n        const nextMLeft = document.createElement('a');\n        nextMLeft.setAttribute('href', '#');\n        nextMLeft.innerText = '< ' + planner.strings.previous_month;\n        nextMLeft.addEventListener('click', () => {\n            // Just scroll to the next month that is not in view\n            const newPos = (svgcontainer.scrollLeft / planner.monthWidth - 1).toFixed(0) * (planner.monthWidth + planner.padding);\n            svgcontainer.scrollTo({\n                top: 0,\n                left: newPos,\n                behavior: 'smooth',\n            });\n        });\n        leftDropMenu.appendChild(nextMLeft);\n        child = leftDropMenu.lastElementChild;\n        while (child !== leftDropMenu.firstElementChild) {\n            leftDropMenu.removeChild(child);\n            child = leftDropMenu.lastElementChild;\n        }\n        // Clear inactive months, will be set fresh now\n        planner.inactiveMonths.length = 0;\n        planner.activeMonths.length = 0;\n        if (planner.view === '3 ' + planner.strings.months) {\n            // Show all months where condition applies that scrollpos plus something is still bigger than screen\n            for (let i = 0; i < planner.months; i++) {\n                // Show in right button dropdown hover\n                if (i * planner.monthWidth + planner.monthWidth * 0.25 < scrollPos) {\n                    planner.inactiveMonths.push([date.getMonth(), date.getFullYear()]);\n                    const month = document.createElement('a');\n                    month.setAttribute('class', 'dropdown-item');\n                    month.setAttribute('href', '#');\n                    month.innerText = date.toLocaleString(planner.locale, {year: 'numeric', month: 'short'});\n                    month.addEventListener('click', () => {\n                        const scrollToAmount = (planner.monthWidth + planner.padding) * i - planner.monthWidth;\n                        // Move the scroll bar to the correct position\n                        svgcontainer.scrollTo({\n                            top: 0,\n                            left: scrollToAmount,\n                            behavior: 'smooth',\n                        });\n\n                    });\n\n                    leftDropMenu.appendChild(month);\n                } else if (i * planner.monthWidth + planner.monthWidth * 0.75 >= scrollPos + planner.monthWidth * 3) {\n                    planner.inactiveMonths.push([date.getMonth(), date.getFullYear()]);\n                    // Still need to add the padding to make it accurate\n                    const month = document.createElement('a');\n                    month.setAttribute('class', 'dropdown-item');\n                    month.setAttribute('href', '#');\n                    month.innerText = date.toLocaleString(planner.locale, {year: 'numeric', month: 'short'});\n                    month.addEventListener('click', () => {\n                        const scrollToAmount = (planner.monthWidth + planner.padding) * i - planner.monthWidth;\n                        // Move the scroll bar to the correct position\n                        svgcontainer.scrollTo({\n                            top: 0,\n                            left: scrollToAmount,\n                            behavior: 'smooth',\n                        });\n                    });\n                    rightDropMenu.appendChild(month);\n                } else {\n                    // Month must be currently active and in view\n                    planner.activeMonths.push([date.getMonth(), date.getFullYear()]);\n                }\n                date.setMonth((date.getMonth() + 1));\n            }\n\n        } else {\n            for (let i = 0; i < planner.months; i++) {\n                if (i * planner.monthWidth + planner.monthWidth * 0.75 < scrollPos) {\n                    planner.inactiveMonths.push([date.getMonth(), date.getFullYear()]);\n                    const month = document.createElement('a');\n                    month.setAttribute('class', 'dropdown-item');\n                    month.setAttribute('href', '#');\n                    month.innerText = date.toLocaleString(planner.locale, {year: 'numeric', month: 'short'});\n                    month.addEventListener('click', () => {\n                        const scrollToAmount = (planner.monthWidth + planner.padding) * i;\n                        // Move the scroll bar to the correct position\n                        svgcontainer.scrollTo({\n                            top: 0,\n                            left: scrollToAmount,\n                            behavior: 'smooth',\n                        });\n                    });\n                    leftDropMenu.appendChild(month);\n                } else if (i * planner.monthWidth + planner.monthWidth * 0.75 >= svgcontainer.scrollLeft + planner.monthWidth) {\n                    // Show in right button dropdown hover\n                    planner.inactiveMonths.push([date.getMonth(), date.getFullYear()]);\n                    // Still need to add the padding to make it accurate\n                    const month = document.createElement('a');\n                    month.setAttribute('class', 'dropdown-item');\n                    month.setAttribute('href', '#');\n                    month.innerText = date.toLocaleString(planner.locale, {year: 'numeric', month: 'short'});\n                    month.addEventListener('click', () => {\n                        const scrollToAmount = (planner.monthWidth + planner.padding) * i;\n                        // Move the scroll bar to the correct position\n                        svgcontainer.scrollTo({\n                            top: 0,\n                            left: scrollToAmount,\n                            behavior: 'smooth',\n                        });\n                    });\n\n                    rightDropMenu.appendChild(month);\n\n                } else {\n                    // Must be active and currently in view\n                    planner.activeMonths.push([date.getMonth(), date.getFullYear()]);\n                    if (mobile) {\n                        // For mobile header, I can now also set the heading accordingly\n                        const mobileHeader = document.getElementById('mobileMonth');\n                        const currentDate = new Date(date.getFullYear(), date.getMonth());\n                        mobileHeader.innerText = currentDate.toLocaleString(planner.locale, {\n                            month: 'long',\n                            year: 'numeric'\n                        });\n                    }\n\n                }\n                date.setMonth((date.getMonth() + 1));\n            }\n        }\n        // Remove the next button if no actual next month exists on left or right side\n        if (leftDropMenu.lastElementChild === leftDropMenu.firstElementChild) {\n            leftDropMenu.removeChild(leftDropMenu.firstElementChild);\n        }\n        if (rightDropMenu.lastElementChild === rightDropMenu.firstElementChild) {\n            rightDropMenu.removeChild(rightDropMenu.firstElementChild);\n        }\n\n        planner.updateIndicatorAmounts();\n    },\n\n    updateIndicatorAmounts: function() {\n        // First update quantity in indicators\n        // Check how many events in this month and add to indicator\n        const rightText = document.getElementById('rightText');\n        const leftText = document.getElementById('leftText');\n        let leftAmount = 0;\n        let rightAmount = 0;\n\n        for (let [key, value] of planner.storedEvents) {\n            const date = new Date(key);\n            for (let i = 0; i < planner.inactiveMonths.length; i++) {\n                const [month, year] = planner.inactiveMonths.at(i);\n                if (date.getMonth() === month && date.getFullYear() === year) {\n                    if ((month < planner.activeMonths.at(0)[0] && year <= planner.activeMonths.at(0)[1]) ||\n                        year < planner.activeMonths.at(0)[1]) {\n                        // Means it is inactive on left\n                        leftAmount += value;\n                    } else {\n                        // Means it is inactive on right\n                        rightAmount += value;\n                    }\n                }\n            }\n        }\n        leftText.textContent = leftAmount.toString();\n        rightText.textContent = rightAmount.toString();\n    },\n\n    storeEvents: function(events) {\n        planner.storedEvents = new Map();\n        planner.storedMilestones = new Map();\n        for (let i = 0; i < events.length; i++) {\n            let date = new Date(events[i].startdate * 1000);\n            date.setHours(0);\n            date.setMinutes(0);\n            date = date.getTime();\n            if (events[i].type === 'Milestone' || events[i].type === 'Meilenstein') {\n                if (planner.storedMilestones.get(date)) {\n                    planner.storedMilestones.set(date, planner.storedMilestones.get(date) + 1);\n                } else {\n                    planner.storedMilestones.set(date, 1);\n                }\n            } else {\n                if (planner.storedEvents.get(date)) {\n                    planner.storedEvents.set(date, planner.storedEvents.get(date) + 1);\n                } else {\n                    planner.storedEvents.set(date, 1);\n                }\n            }\n        }\n    },\n\n    drawLoading: function() {\n        const img = '<img src=\"../../../pix/i/loading.gif\" ' +\n            'alt=\"LoadingImage\" style=\"width:48px;height:48px;\">';\n\n        svgcontainer.innerHTML = img + ' ' + planner.strings.loading_msg;\n    },\n\n    updateSvgHeight: function(height) {\n        document.querySelector('#planner-svg').setAttributeNS(null, 'height', height);\n    },\n\n    drawplanner: function() {\n        const y = planner.barPosY - planner.barHeight / 2;\n        const date = new Date(planner.startDate.getTime());\n        // First update quantity in indicators\n        // Check how many events in this month and add to indicator\n        const rightText = document.getElementById('rightText');\n        const leftText = document.getElementById('leftText');\n        let leftAmount = 0;\n        let rightAmount = 0;\n        for (let [key, value] of planner.storedEvents) {\n            const newdate = new Date(key);\n            for (let i = 0; i < planner.inactiveMonths.length; i++) {\n                const [month, year] = planner.inactiveMonths.at(i);\n                if (newdate.getMonth() === month && newdate.getFullYear() === year) {\n                    if (month < planner.activeMonths.at(0)[0] && year <= planner.activeMonths.at(0)[1]) {\n                        // Means it is inactive on left\n                        leftAmount += value;\n                    } else {\n                        // Means it is inactive on right\n                        rightAmount += value;\n                    }\n                }\n            }\n        }\n\n        leftText.textContent = leftAmount.toString();\n        rightText.textContent = rightAmount.toString();\n        if (window.innerWidth <= 767) {\n            this.drawMobile(y, date);\n        } else {\n\n            this.drawDesktop(leftText, rightText, leftAmount, rightAmount, y, date);\n        }\n    },\n    drawDesktop: function(leftText, rightText, leftAmount, rightAmount, y, date) {\n        for (let i = 0; i < planner.months; ++i) {\n            // Inserting line for each month\n            const newElementline = document.createElementNS(NS, 'rect');\n            const x = planner.paddingleft + i * planner.monthWidth + i * planner.padding;\n            const x1 = planner.paddingleft + (i + 1) * planner.monthWidth + i * planner.padding;\n            const width = x1 - x;\n            const height = planner.barHeight;\n            newElementline.setAttributeNS(null, 'x', x);\n            newElementline.setAttributeNS(null, 'width', width);\n            newElementline.setAttributeNS(null, 'y', y);\n            newElementline.setAttributeNS(null, 'height', height);\n            newElementline.setAttributeNS(null, 'rx', 5);\n            newElementline.setAttributeNS(null, 'cursor', 'pointer');\n            newElementline.setAttributeNS(null, 'stroke', '#000');\n            svgElement.appendChild(newElementline);\n\n            // Inserting text into line\n            const newElementtext = document.createElementNS(NS, 'text');\n            const textx = planner.paddingleft + i * planner.padding + i * planner.monthWidth + planner.monthWidth / 2;\n            newElementtext.setAttributeNS(null, 'x', textx);\n            newElementtext.setAttributeNS(null, 'y', y + height / 2);\n            newElementtext.setAttributeNS(null, 'dy', '6px');\n            newElementtext.setAttributeNS(null, 'cursor', 'pointer');\n            newElementtext.style.textAnchor = 'middle';\n            newElementtext.style.fontWeight = 'normal';\n            newElementtext.style.fontFamily = 'sans-serif';\n            newElementtext.setAttributeNS(null, 'fill', 'white');\n            if (planner.view === 'SEMESTER') {\n                newElementtext.textContent = date.toLocaleString(planner.locale, {year: '2-digit', month: 'short'});\n            } else {\n                newElementtext.textContent = date.toLocaleString(planner.locale, {year: 'numeric', month: 'short'});\n            }\n\n            svgElement.appendChild(newElementtext);\n\n            date.setMonth(date.getMonth() + 1);\n        }\n    },\n    drawMobile: function(y, date) {\n        for (let i = 0; i < planner.months; ++i) {\n            // Double loop also for the weeks in the month\n            // Figure out the month number\n            let weeks = planner.weeksInMonth.get(date.getMonth().toString() + date.getFullYear().toString());\n            let weekAmount = weeks[1] - weeks[0] + 1;\n            if (weeks[0] === 52) {\n                weekAmount = 6;\n            }\n            for (let j = 0; j < weekAmount; j++) {\n                // Also figure out first and last day of the week\n                const year = date.getFullYear();\n                let week = 0;\n                if (weeks[0] === 52) {\n                    week = (j === 0 ? 52 : j);\n                } else {\n                    week = weeks[0] + j;\n                }\n                // 4th Jan is always in first week\n                let firstDate;\n                if (weeks[0] === 52) {\n                    // Jan handled differnetly, needs to be dates from last year\n                    firstDate = new Date(year - 1, 0, 4);\n                } else {\n                    firstDate = new Date(year, 0, 4);\n                }\n                let firstDateDay = firstDate.getDay();\n                // Make sure the week starts with Monday\n                if (firstDateDay === 0) {\n                    firstDateDay = 6;\n                } else {\n                    firstDateDay = firstDateDay - 1;\n                }\n\n                const firstDay = new Date(firstDate.setDate(firstDate.getDate() + (week - 1) * 7 - firstDateDay));\n                const lastDay = new Date(firstDate.setDate(firstDate.getDate() + 6));\n                // Inserting line for each month\n                const newElementline = document.createElementNS(NS, 'rect');\n                const x = planner.paddingleft + i * planner.monthWidth + i * planner.padding;\n                const x1 = planner.paddingleft + (i + 1) * planner.monthWidth + i * planner.padding;\n                const width = x1 - x;\n                const daywith = width / 7;\n                const height = planner.barHeight;\n                newElementline.setAttributeNS(null, 'x', x);\n                newElementline.setAttributeNS(null, 'width', width);\n                newElementline.setAttributeNS(null, 'y', y + j * planner.weekHeight);\n                newElementline.setAttributeNS(null, 'height', height);\n                newElementline.setAttributeNS(null, 'rx', 5);\n                newElementline.setAttributeNS(null, 'stroke', '#000');\n                svgElement.appendChild(newElementline);\n                // If first or last week, show where actual month starts\n                if (j === 0) {\n                    // How many days are of the previous month\n                    if (firstDay.getMonth() !== lastDay.getMonth()) {\n                        // Means the previous month is still in this week\n                        let diff = new Date(lastDay.getFullYear(), lastDay.getMonth(), 1).getTime()\n                            - new Date(firstDay.getFullYear(), firstDay.getMonth(), firstDay.getDate()).getTime();\n                        diff = diff / (1000 * 3600 * 24);\n                        // Inserting line for previous month to overlay\n                        const pastMonthLine = document.createElementNS(NS, 'rect');\n                        const x = planner.paddingleft + i * planner.monthWidth + i * planner.padding;\n                        const x1 = x + diff * daywith;\n                        const width = x1 - x;\n                        const height = planner.barHeight;\n                        pastMonthLine.setAttributeNS(null, 'x', x);\n                        pastMonthLine.setAttributeNS(null, 'width', width);\n                        pastMonthLine.setAttributeNS(null, 'y', y + j * planner.weekHeight);\n                        pastMonthLine.setAttributeNS(null, 'height', height);\n                        pastMonthLine.setAttributeNS(null, 'rx', 0);\n                        pastMonthLine.setAttributeNS(null, 'fill', 'white');\n                        pastMonthLine.style.opacity = '0.8';\n                        svgElement.appendChild(pastMonthLine);\n                    }\n\n                } else if (j === (weekAmount - 1)) {\n                    // Means we are in the last week of the month\n                    if (firstDay.getMonth() !== lastDay.getMonth()) {\n                        // Means the previous month is still in this week\n                        let diff = new Date(lastDay.getFullYear(), lastDay.getMonth(), lastDay.getDate()).getTime()\n                            - new Date(lastDay.getFullYear(), lastDay.getMonth(), 1).getTime();\n                        diff = (diff / (1000 * 3600 * 24)) + 1;\n                        // These many days of the next month are visible in this month\n                        // Inserting line for previous month to overlay\n                        const nextMonthLine = document.createElementNS(NS, 'rect');\n                        const x1 = planner.paddingleft + (i + 1) * planner.monthWidth + i * planner.padding;\n                        const x = x1 - diff * daywith;\n                        const width = x1 - x;\n                        const height = planner.barHeight;\n                        nextMonthLine.setAttributeNS(null, 'x', x);\n                        nextMonthLine.setAttributeNS(null, 'width', width);\n                        nextMonthLine.setAttributeNS(null, 'y', y + j * planner.weekHeight);\n                        nextMonthLine.setAttributeNS(null, 'height', height);\n                        nextMonthLine.setAttributeNS(null, 'rx', 0);\n                        nextMonthLine.setAttributeNS(null, 'fill', 'white');\n                        nextMonthLine.style.opacity = '0.8';\n                        svgElement.appendChild(nextMonthLine);\n                    }\n                }\n\n                for (let i = 1; i < 7; i++) {\n                    const weekline = document.createElementNS(NS, 'line');\n                    weekline.setAttributeNS(null, 'x1', x + i * daywith);\n                    weekline.setAttributeNS(null, 'y1', y + j * planner.weekHeight);\n                    weekline.setAttributeNS(null, 'x2', x + i * daywith);\n                    weekline.setAttributeNS(null, 'y2', y + j * planner.weekHeight + height);\n                    weekline.style.stroke = planner.primaryMarkerColour;\n                    weekline.style.strokeWidth = '3';\n                    weekline.style.opacity = '1';\n                    svgElement.appendChild(weekline);\n                }\n                // Inserting text into line\n                const newElementtext = document.createElementNS(NS, 'text');\n                const textx = planner.paddingleft + i * planner.padding + i * planner.monthWidth + planner.monthWidth / 2;\n                newElementtext.setAttributeNS(null, 'x', textx);\n                newElementtext.setAttributeNS(null, 'y', (y + height / 2) + j * planner.weekHeight);\n                newElementtext.setAttributeNS(null, 'dy', '6px');\n                newElementtext.setAttributeNS(null, 'cursor', 'pointer');\n                newElementtext.style.textAnchor = 'middle';\n                newElementtext.style.fontWeight = 'bold';\n                newElementtext.style.fontFamily = 'sans-serif';\n                newElementtext.setAttributeNS(null, 'fill', 'white');\n                newElementtext.textContent += planner.strings.calendarweek + ' '\n                    + (week)\n                    + ' ('\n                    + firstDay.toLocaleDateString(planner.locale, {day: 'numeric', month: 'numeric'})\n                    + ' - '\n                    + lastDay.toLocaleDateString(planner.locale, {day: 'numeric', month: 'numeric'})\n                    + ' )';\n                svgElement.appendChild(newElementtext);\n            }\n            date.setMonth(date.getMonth() + 1);\n        }\n\n    },\n    weekLevel: function(weeks, calendarWeek) {\n        let mult = 0;\n        if (weeks[0] !== 52) {\n            for (let first = weeks[0]; first <= weeks[1]; first++) {\n                if (calendarWeek === first) {\n                    mult = first - weeks[0];\n                }\n            }\n        } else {\n            // We need to calculate differently if it is January\n            if (calendarWeek === 52) {\n                mult = 0;\n            } else {\n                for (let first = 1; first <= weeks[1]; first++) {\n                    if (calendarWeek === first) {\n                        mult = first;\n                    }\n                }\n            }\n        }\n        return mult;\n    },\n\n    inNextMonthMult: function(nextWeeks, calendarWeek) {\n        let nextMult = 0;\n        if (nextWeeks[0] === 52) {\n            // Overflowing into the next year, need to handle differently\n            if (calendarWeek === 52) {\n                nextMult = 0;\n            } else {\n                for (let first = 1; first <= nextWeeks[1]; first++) {\n                    if (calendarWeek === first) {\n                        nextMult = first;\n                    }\n                }\n            }\n        } else {\n            for (let first = nextWeeks[0]; first <= nextWeeks[1]; first++) {\n                if (calendarWeek === first) {\n                    nextMult = first - nextWeeks[0];\n                }\n            }\n        }\n        return nextMult;\n    },\n\n    inPastMonthMult: function(pastWeeks, calendarWeek) {\n        let pastMult = 0;\n        for (let first = pastWeeks[0]; first <= pastWeeks[1]; first++) {\n            if (calendarWeek === first) {\n                pastMult = first - pastWeeks[0];\n            }\n        }\n        return pastMult;\n    },\n\n    drawSecondTitleLine: function(item, line2, firstline, hover, hoverBack) {\n        if (item.title.length > 25) {\n            // Title needs to go on two lines\n            line2 = document.createElementNS(NS, 'tspan');\n            line2.setAttributeNS(null, 'x', (parseInt(hover.getAttribute('x'))).toString());\n            line2.setAttributeNS(null, 'dy', '1em');\n            line2.setAttributeNS(null, 'class', 'planner-eventTitleTooltip');\n            const words = firstline.textContent.split(' ');\n            let line1 = '';\n            let line2text = '';\n            for (let i = 0; i < words.length; i++) {\n                let test = line1 + words[i] + ' ';\n                let testLength = firstline.textContent.substring(0, test.length).length;\n                if (testLength > 25 && i > 0) {\n                    line2text = words.slice(i).join(' ');\n                    break;\n                }\n                line1 = test;\n            }\n            line2.innerHTML = line2text;\n            firstline.innerHTML = line1;\n            hoverBack.setAttributeNS(null, 'height', '60px');\n        }\n        return line2;\n    },\n\n    moveHover: function(hoverBack, hover, firstline, line2, secondline, thirdline, markerDiameter) {\n        const xValue = parseInt(hoverBack.getAttributeNS(null, 'x')) + 220;\n        if (xValue > svgElement.getAttributeNS(null, 'width')) {\n            const difference = 225 + markerDiameter;\n            hoverBack.setAttributeNS(null, 'x', (hoverBack.getAttributeNS(null, 'x') - difference).toString());\n            hover.setAttributeNS(null, 'x', (hover.getAttributeNS(null, 'x') - difference).toString());\n            firstline.setAttributeNS(null, 'x', (firstline.getAttributeNS(null, 'x') - difference).toString());\n            if (line2) {\n                line2.setAttributeNS(null, 'x', (line2.getAttributeNS(null, 'x') - difference).toString());\n\n            }\n            secondline.setAttributeNS(null, 'x', (secondline.getAttributeNS(null, 'x') - difference).toString());\n            if (thirdline) {\n                thirdline.setAttributeNS(null, 'x', (thirdline.getAttributeNS(null, 'x') - difference).toString());\n            }\n        }\n    },\n\n    addThirdLineHover: function(item, thirdline, hover, hoverBack) {\n        if (!item.userid) {\n            thirdline = document.createElementNS(NS, 'tspan');\n            thirdline.innerHTML = planner.strings.completed_by + ' ' + item.countcompleted +\n                ' ' + planner.strings.students;\n            thirdline.setAttributeNS(null, 'x',\n                (parseInt(hover.getAttribute('x'))).toString());\n            thirdline.setAttributeNS(null, 'dy', '1em');\n            hover.appendChild(thirdline);\n            hoverBack.setAttributeNS(null, 'height',\n                (parseInt(hoverBack.getAttributeNS(null, 'height'), 10) + 12).toString() + 'px');\n        }\n        return thirdline;\n    },\n\n    createSecondLineMerge: function(text1, line2) {\n        if (text1.textContent.length > 29) {\n            // Title needs to go on two lines\n            line2 = document.createElementNS(NS, 'tspan');\n            line2.setAttributeNS(null, 'x', 0);\n            line2.setAttributeNS(null, 'dy', '1em');\n            line2.setAttributeNS(null, 'class', 'planner-eventTitleTooltip');\n            const words = text1.textContent.split(' ');\n            let line1 = '';\n            let line2text = '';\n            for (let i = 0; i < words.length; i++) {\n                let test = line1 + words[i] + ' ';\n                let testLength = text1.textContent.substring(0, test.length).length;\n                if (testLength > 29 && i > 0) {\n                    line2text = words.slice(i).join(' ');\n                    break;\n                }\n                line1 = test;\n            }\n            line2.innerHTML = line2text;\n            text1.textContent = line1;\n        }\n        return line2;\n    },\n\n    drawMarker: function(items) {\n        let newElement = null;\n        items = items.filter(function(item) {\n            return planner.includedTypes.indexOf(item.type) !== -1\n                && (item.visible || planner.isteacher)\n                && ((item.startdate * 1000) >= planner.startDate.getTime())\n                && ((item.startdate * 1000) <= planner.endDate.getTime());\n        });\n        // Keep track of how many events occur on the same day and which days have the most.\n        const stackTracker = {\n            events: {},\n            milestones: {},\n            max: {\n                events: 0,\n                milestones: 0,\n            },\n        };\n        const mobile = (window.innerWidth < 767);\n        let\n            count = items.length,\n            markerPositions = new Array(count),\n            overlapMap = [];\n\n        for (let i = 0; i < count; ++i) {\n            const\n                item = items[i],\n                itemDate = new Date(item.startdate * 1000),\n                itemWeek = this.getWeek(itemDate),\n                // There was a bug here if the startdate is not on a 1st of the month\n                monthOffset = itemDate.getMonth() - planner.startDate.getMonth() +\n                    (12 * (itemDate.getFullYear() - planner.startDate.getFullYear())),\n                genericMonthCount = new Date(itemDate.getFullYear(), (itemDate.getMonth() + 1), 0).getDate(),\n                startDate = new Date(itemDate.getFullYear(), itemDate.getMonth(), 1),\n                endDate = new Date(itemDate.getFullYear(), itemDate.getMonth(), genericMonthCount);\n\n            let xPos;\n            if (!mobile) {\n                xPos = (planner.paddingleft + monthOffset * planner.monthWidth\n                    + monthOffset * planner.padding + 2\n                    + ((planner.monthWidth - 4) / (endDate.getDate() - startDate.getDate()))\n                    * (itemDate.getDate() - startDate.getDate()));\n            } else {\n                xPos = (itemDate.getDay() === 0) ? ((planner.paddingleft + monthOffset * planner.monthWidth)\n                        + monthOffset * planner.padding + 2\n                        + ((planner.monthWidth - 4) / 7)\n                        * 6\n                        + ((planner.weekWidth / 7) / 2))\n                    : ((planner.paddingleft + monthOffset * planner.monthWidth)\n                        + monthOffset * planner.padding + 2\n                        + ((planner.monthWidth - 4) / 7)\n                        * (itemDate.getDay() - 1))\n                    + ((planner.weekWidth / 7) / 2);\n            }\n            const\n                type = item.userid ? 'milestones' : 'events',\n                stackTrack = stackTracker[type],\n                currentStackCount = stackTrack[xPos] = (stackTrack[xPos] ?? 0) + 1;\n            if (currentStackCount > stackTracker.max[type]) {\n                stackTracker.max[type] = currentStackCount;\n            }\n            markerPositions[i] = {\n                x: xPos,\n                stackPos: currentStackCount,\n                week: itemWeek\n            };\n\n        }\n\n        let\n            markerDiameter = (mobile) ? 30 : 30, // The width and height of the rectangle, excluding stroke width\n            tooltipHeight = markerDiameter,\n            needleLength = (mobile) ? 15 : 25, // The length of the stroke connecting a marker with the date strip.\n            eventsStartY = (!mobile) ?\n                tooltipHeight\n                + needleLength - 15\n                + stackTracker.max.events * markerDiameter\n                : tooltipHeight\n                + needleLength - 15\n                + markerDiameter, // Only ever stack of 1\n            milestonesStartY = (mobile) ?\n                eventsStartY\n                : eventsStartY + planner.barHeight;\n\n        // Where the month bars start (for mobile, where the first bar starts)\n        planner.barPosY = eventsStartY + planner.barHeight / 2;\n        // Change SVG height according to the maximum number of events on the same day.\n        // Exclude milestones if there are none.\n        // Needed for mobile display\n        planner.weekHeight = 80;\n        if (!mobile) {\n            svgHeight = stackTracker.max.milestones === 0\n                ? milestonesStartY + 15 // Add some margin.\n                : milestonesStartY\n                + needleLength - 15\n                + stackTracker.max.milestones * markerDiameter\n                + tooltipHeight;\n        } else {\n            svgHeight = planner.weekHeight * 6 + planner.barHeight;// For mobile svgHeight is static\n        }\n        planner.updateSvgHeight(svgHeight);\n\n        const startDate = new Date();\n        const endDate = new Date();\n        let index = 0;\n        const currentDate = Date.now() / 1000;\n        // Function to check if element already exists in overlapMap\n        const inOverMap = function(curVal, indx) {\n            return !!overlapMap[indx].includes(this);\n        };\n        // Check for overlaps, only needed for desktop\n        // For mobile, overlaps only if more on exact day, can retrieve from maxstacktracker\n        overlapMap = this.checkForOverlaps(markerPositions, markerDiameter, overlapMap, inOverMap, items, mobile);\n        // Stick with forEach() because it would cause to many grunt errors when changed to a loop :-| .\n        items.forEach(function(item) {\n            const i = index++;\n            let countDrawn = 1;\n            let inPastMonth = false;\n            let inNextMonth = false;\n            // Only draw elements that are not overlapping\n            if (!overlapMap.find(inOverMap, markerPositions[i])) {\n                startDate.setTime(item.startdate * 1000);\n                endDate.setTime(item.enddate * 1000);\n\n                let\n                    xPos = markerPositions[i].x,\n                    stackPos = markerPositions[i].stackPos;\n\n                let needleStart, needleEnd, yPos, tooltipY;\n                let otherneedleStart, otherneedleEnd, otheryPos, othertooltipY;\n                if (item.userid && !mobile) { // Check if milestone.\n                    needleStart = milestonesStartY;\n                    needleEnd = needleStart + needleLength;\n                    yPos = needleEnd + markerDiameter * (stackPos - 1) + markerDiameter;\n                    tooltipY = needleEnd + (stackTracker.max.milestones - 1) * markerDiameter + tooltipHeight;\n                } else if (!mobile) {\n                    needleStart = eventsStartY;\n                    needleEnd = needleStart - needleLength;\n                    yPos = needleEnd - markerDiameter * (stackPos - 1);\n                    tooltipY = needleEnd - (stackTracker.max.events - 1) * markerDiameter - tooltipHeight;\n                } else {\n                    // Drawmarker calculations for mobile view\n                    const calendarWeek = planner.getWeek(startDate);\n                    const weeks = planner.weeksInMonth.get(startDate.getMonth().toString() + startDate.getFullYear().toString());\n                    // On mobile if that calendar week is also in the previous month or in the next,\n                    // We need to draw the corresponding elements too\n                    const copiedDate = new Date(startDate.getTime());\n                    copiedDate.setMonth((copiedDate.getMonth() - 1));\n\n                    const pastWeeks = planner.weeksInMonth.get(copiedDate.getMonth().toString()\n                        + copiedDate.getFullYear().toString());\n                    copiedDate.setMonth((copiedDate.getMonth() + 2));\n                    const nextWeeks = planner.weeksInMonth.get(copiedDate.getMonth().toString()\n                        + copiedDate.getFullYear().toString());\n\n                    if (pastWeeks !== undefined && calendarWeek === pastWeeks[1]) {\n                        inPastMonth = true;\n                        countDrawn++;\n                    }\n                    if (nextWeeks !== undefined && calendarWeek === nextWeeks[0]) {\n                        inNextMonth = true;\n                        countDrawn++;\n                    }\n\n                    let mult = planner.weekLevel(weeks, calendarWeek);\n\n                    if (inPastMonth) {\n                        const pastMult = planner.inPastMonthMult(pastWeeks, calendarWeek);\n                        otherneedleStart = eventsStartY + pastMult * planner.weekHeight;\n                        otherneedleEnd = otherneedleStart - needleLength;\n                        otheryPos = otherneedleEnd;\n                        othertooltipY = otherneedleEnd - tooltipHeight;\n                    }\n                    if (inNextMonth) {\n                        const nextMult = planner.inNextMonthMult(nextWeeks, calendarWeek);\n                        otherneedleStart = eventsStartY + nextMult * planner.weekHeight;\n                        otherneedleEnd = otherneedleStart - needleLength;\n                        otheryPos = otherneedleEnd;\n                        othertooltipY = otherneedleEnd - tooltipHeight;\n                    }\n                    needleStart = eventsStartY + mult * planner.weekHeight;\n                    needleEnd = needleStart - needleLength;\n                    yPos = needleEnd;\n                    tooltipY = needleEnd - tooltipHeight;\n                }\n                const anchor = 'start';\n\n                for (let i = 0; i < countDrawn; i++) {\n                    if (i === 1) {\n                        if (inPastMonth) {\n                            xPos -= ((planner.monthWidth + planner.padding + 2));\n                        } else {\n                            xPos += ((planner.monthWidth + planner.padding + 2));\n                        }\n                        needleStart = otherneedleStart;\n                        needleEnd = otherneedleEnd;\n                        yPos = otheryPos;\n                        tooltipY = othertooltipY;\n                    }\n                    const hoverBack = document.createElementNS(NS, 'rect');\n                    hoverBack.setAttributeNS(null, 'x', xPos + (markerDiameter / 2) + 5);\n                    hoverBack.setAttributeNS(null, 'fill', 'white');\n                    hoverBack.setAttributeNS(null, 'rx', '2');\n                    hoverBack.setAttributeNS(null, 'stroke', planner.primaryMarkerColour);\n                    hoverBack.style.display = 'none';\n\n                    const hover = document.createElementNS(NS, 'text');\n                    hover.setAttributeNS(null, 'class', 'hover');\n                    hover.setAttributeNS(null, 'x', xPos + (markerDiameter / 2) + 7);\n                    hover.setAttributeNS(null, 'y', (tooltipY - 10));\n                    hover.setAttributeNS(null, 'dy', '6px');\n                    hover.style.textAnchor = anchor;\n                    hover.style.fontSize = '14px';\n                    hover.style.fontWeight = 'simple';\n                    hover.style.fontFamily = 'sans-serif';\n                    hover.style.display = 'none';\n                    hover.setAttributeNS(null, 'fill', 'black');\n\n                    let firstline = document.createElementNS(NS, 'tspan');\n                    let line2 = null;\n                    const secondline = document.createElementNS(NS, 'tspan');\n                    let thirdline = null;\n                    firstline.innerHTML = item.title;\n                    firstline.setAttributeNS(null, 'x', (parseInt(hover.getAttribute('x'))).toString());\n                    firstline.setAttributeNS(null, 'dy', '1em');\n                    firstline.setAttributeNS(null, 'class', 'planner-eventTitleTooltip');\n\n                    line2 = planner.drawSecondTitleLine(item, line2, firstline, hover, hoverBack);\n\n                    secondline.innerHTML = planner.dateFormatter.format(startDate) + ', '\n                        + planner.timeFormatter.format(startDate) + ' – '\n                        + planner.timeFormatter.format(endDate);\n\n                    secondline.setAttributeNS(null, 'x', (parseInt(hover.getAttribute('x'))).toString());\n                    secondline.setAttributeNS(null, 'dy', '1em');\n\n                    hover.appendChild(firstline);\n                    hoverBack.setAttributeNS(null, 'height', '36px');\n                    if (line2) {\n                        hover.appendChild(line2);\n                        hoverBack.setAttributeNS(null, 'height',\n                            (parseInt(hoverBack.getAttributeNS(null, 'height'), 10) + 12).toString() + 'px');\n                    }\n                    hover.appendChild(secondline);\n\n                    thirdline = planner.addThirdLineHover(item, thirdline, hover, hoverBack);\n\n                    // This needs to be responsive based on longest tspan\n                    hoverBack.setAttributeNS(null, 'width', '220px');\n\n                    // Making sure hover appears just to the right of the element\n                    hover.setAttributeNS(null, 'y', yPos - markerDiameter - 10);\n                    hoverBack.setAttributeNS(null, 'y', yPos - markerDiameter - 10);\n\n                    planner.moveHover(hoverBack, hover, firstline, line2, secondline, thirdline, markerDiameter);\n\n                    svgElement.appendChild(hoverBack);\n                    svgElement.appendChild(hover);\n\n                    const\n                        fill = planner.getColor(item),\n                        stroke = item.enddate < currentDate ? fill : planner.stillDueColour;\n\n                    const label = item.type[0];\n                    const mandatory = item.mandatory;\n                    const graded = item.graded;\n\n                    if (stackPos <= 1 || mobile) {\n                        newElement = document.createElementNS(NS, 'line');\n                        newElement.setAttributeNS(null, 'x1', xPos);\n                        newElement.setAttributeNS(null, 'y1', needleStart);\n                        newElement.setAttributeNS(null, 'x2', xPos);\n                        newElement.setAttributeNS(null, 'y2', needleEnd);\n                        newElement.style.stroke = stroke;\n                        newElement.style.strokeWidth = '4';\n                        newElement.style.opacity = '1';\n                        newElement.setAttributeNS(null, 'cursor', 'pointer');\n                        newElement.addEventListener('click', () => {\n                            planner.showModal(item);\n                        });\n                        newElement.addEventListener('mouseover', () => {\n                            hover.style.display = null;\n                            hoverBack.style.display = null;\n\n                        });\n                        newElement.addEventListener('mouseout', () => {\n                            hover.style.display = 'none';\n                            hoverBack.style.display = 'none';\n\n                        });\n                        svgElement.prepend(newElement);\n\n                    }\n                    const rectElement = document.createElementNS(NS, 'rect');\n                    rectElement.setAttributeNS(null, 'id', 'event_' + item.id);\n                    rectElement.setAttributeNS(null, 'x', xPos - (markerDiameter / 2));\n                    rectElement.setAttributeNS(null, 'y', yPos - (markerDiameter));\n                    rectElement.setAttributeNS(null, 'height', markerDiameter);\n                    rectElement.setAttributeNS(null, 'width', markerDiameter);\n                    rectElement.setAttributeNS(null, 'rx', 3.5);\n                    rectElement.setAttributeNS(null, 'fill', fill);\n                    rectElement.style.stroke = stroke;\n                    rectElement.style.strokeWidth = '3.5';\n                    rectElement.setAttributeNS(null, 'cursor', 'pointer');\n                    rectElement.addEventListener('click', () => {\n                        planner.showModal(item);\n                    });\n                    rectElement.addEventListener('mouseover', () => {\n                        hover.style.display = null;\n                        hoverBack.style.display = null;\n                        rectElement.style.opacity = '0.5';\n\n                    });\n                    rectElement.addEventListener('mouseout', () => {\n                        hover.style.display = 'none';\n                        hoverBack.style.display = 'none';\n                        rectElement.style.opacity = '1';\n                    });\n\n                    newElement.after(rectElement);\n\n                    const textElement = document.createElementNS(NS, 'text');\n                    rectElement.after(textElement);\n                    textElement.setAttributeNS(null, 'x', xPos);\n                    textElement.setAttributeNS(null, 'y', yPos - (markerDiameter / 2));\n                    textElement.setAttributeNS(null, 'dy', '6px');\n                    if (graded) {\n                        textElement.style.cssText += 'text-decoration: underline';\n                        textElement.style.textDecorationColor = planner.stillDueColour;\n                    }\n                    textElement.style.cssText += 'text-anchor:middle;font-weight:bold;font-family:sans-serif';\n                    textElement.setAttributeNS(null, 'fill', planner.stillDueColour);\n                    textElement.setAttributeNS(null, 'cursor', 'pointer');\n\n                    const text = document.createElementNS(NS, 'tspan');\n                    text.textContent = label;\n                    text.setAttributeNS(null, 'fill', planner.fontColour);\n                    textElement.appendChild(text);\n                    if (mandatory) {\n                        const asterisk = document.createElementNS(NS, 'tspan');\n                        asterisk.setAttributeNS(null, 'style', 'fill:#474747');\n                        asterisk.textContent = ' *';\n                        textElement.appendChild(asterisk);\n                    }\n\n                    textElement.addEventListener('click', () => {\n                        planner.showModal(item);\n                    });\n                    textElement.addEventListener('mouseover', () => {\n                        hover.style.display = null;\n                        hoverBack.style.display = null;\n                        rectElement.style.opacity = '0.5';\n\n                    });\n                    textElement.addEventListener('mouseout', () => {\n                        hover.style.display = 'none';\n                        hoverBack.style.display = 'none';\n                        rectElement.style.opacity = '1';\n\n                    });\n\n                }\n\n            }\n        });\n        // Now we have information about which elements overlap, draw those\n        overlapMap.forEach(function(overlap) {\n            // Need to set startdate here too\n            startDate.setTime(items[markerPositions.indexOf(overlap[0])].startdate * 1000);\n            endDate.setTime(items[markerPositions.indexOf(overlap[0])].enddate * 1000);\n            const\n                fill = (items[markerPositions.indexOf(overlap[0])].userid && !mobile)\n                    ? planner.milestoneColour\n                    : planner.primaryMarkerColour;\n            // Ypos will always be just height of one element, since we merge stacked ones\n            let needleStart, needleEnd, yPos;\n            let inPastMonth = false;\n            let otherneedleStart, otherneedleEnd, otheryPos;\n            let countDrawn = 1;\n            let oneMandatory = false;\n            let oneGraded = false;\n\n            if (items[markerPositions.indexOf(overlap[0])].userid && !mobile) { // Check if milestone.\n                needleStart = milestonesStartY;\n                needleEnd = needleStart + needleLength;\n                yPos = needleEnd + markerDiameter;\n            } else {\n                // Don't need to differentiate between mobile and desktop here\n                const calendarWeek = planner.getWeek(new Date(items[markerPositions.indexOf(overlap[0])].startdate * 1000));\n                const weeks = planner.weeksInMonth.get(startDate.getMonth().toString() + startDate.getFullYear().toString());\n                // On mobile if that calendar week is also in the previous month or in the next,\n                // We need to draw the corresponding elements too\n                let copiedDate = new Date(startDate.getTime());\n                copiedDate.setMonth(copiedDate.getMonth() - 1);\n                const pastWeeks = planner.weeksInMonth.get(copiedDate.getMonth().toString() + copiedDate.getFullYear().toString());\n                copiedDate.setMonth(copiedDate.getMonth() + 2);\n                const nextWeeks = planner.weeksInMonth.get(copiedDate.getMonth().toString() + copiedDate.getFullYear().toString());\n                let mult = 0;\n                if (mobile) {\n                    for (let first = weeks[0]; first <= weeks[1]; first++) {\n                        if (calendarWeek === first) {\n                            mult = first - weeks[0];\n                        }\n                    }\n                    if (pastWeeks !== undefined && calendarWeek === pastWeeks[1]) {\n                        inPastMonth = true;\n                        countDrawn++;\n                        const pastMult = planner.pastMergeMobile(weeks, pastWeeks, calendarWeek);\n                        otherneedleStart = eventsStartY + pastMult * planner.weekHeight;\n                        otherneedleEnd = otherneedleStart - needleLength;\n                        otheryPos = otherneedleEnd;\n\n                    }\n                    if (nextWeeks !== undefined && calendarWeek === nextWeeks[0]) {\n                        countDrawn++;\n                        const nextMult = planner.nextMergeMobile(weeks, nextWeeks, calendarWeek);\n                        otherneedleStart = eventsStartY + nextMult * planner.weekHeight;\n                        otherneedleEnd = otherneedleStart - needleLength;\n                        otheryPos = otherneedleEnd;\n                    }\n                }\n                needleStart = eventsStartY + mult * planner.weekHeight;\n                needleEnd = needleStart - needleLength;\n                yPos = needleEnd;\n            }\n            overlap.sort((a, b) => a.x - b.x);\n            let stroke;\n            let latestDate;\n            let xPos = overlap[0].x;\n            let xPosEnd = overlap[overlap.length - 1].x;\n\n            let width = (xPosEnd + markerDiameter / 2) - (xPos - (markerDiameter / 2));\n            let center = xPos - markerDiameter / 2 + width / 2;\n\n            const links = [];\n            // Draw each line to also show the amount of elements in there and roughly their date\n            overlap.forEach(function(element) {\n                const idx = markerPositions.indexOf(element);\n                startDate.setTime(items[idx].startdate * 1000);\n                endDate.setTime(items[idx].enddate * 1000);\n                latestDate = items[idx].enddate;\n                const lineStroke = items[idx].enddate < currentDate ? fill : planner.stillDueColour;\n\n                if (items[idx].mandatory) {\n                    oneMandatory = true;\n                }\n                if (items[idx].graded) {\n                    oneGraded = true;\n                }\n\n                const stackPos = element.stackPos;\n                const xPosEl = element.x;\n                // Creating the correct entry for the hovering later\n                const textWrapper = document.createElementNS(NS, 'svg');\n                const text = document.createElementNS(NS, 'text');\n                text.setAttributeNS(null, 'x', 0);\n                text.setAttributeNS(null, 'y', 0);\n\n                const text0 = document.createElementNS(NS, 'tspan');\n                text0.setAttributeNS(null, 'x', 0);\n                text0.setAttributeNS(null, 'dy', '1em');\n                text0.setAttributeNS(null, 'class', 'planner-eventTitleTooltip');\n                text0.textContent = items[idx].mandatory ? items[idx].type[0] + '*' : items[idx].type[0];\n                if (items[idx].graded) {\n                    text0.setAttributeNS(null, 'text-decoration', 'underline');\n                }\n                text.appendChild(text0);\n\n                const text1 = document.createElementNS(NS, 'tspan');\n                text1.textContent = ': ' + items[idx].title;\n                text1.setAttributeNS(null, 'class', 'planner-eventTitleTooltip');\n                let line2 = null;\n                line2 = planner.createSecondLineMerge(text1, line2);\n\n                text.appendChild(text1);\n                textWrapper.setAttributeNS(null, 'height', '55px');\n                if (line2) {\n                    text.appendChild(line2);\n                    textWrapper.setAttributeNS(null, 'height', '70px');\n                }\n\n                const text2 = document.createElementNS(NS, 'tspan');\n                text2.setAttributeNS(null, 'x', 0);\n                text2.setAttributeNS(null, 'dy', '1em');\n                text2.innerHTML += planner.dateFormatter.format(startDate) + ', '\n                    + planner.timeFormatter.format(startDate) + ' – '\n                    + planner.timeFormatter.format(endDate);\n                text.appendChild(text2);\n                let text3 = null;\n                if (!items[idx].userid) {\n                    text3 = document.createElementNS(NS, 'tspan');\n                    text3.setAttributeNS(null, 'x', 0);\n                    text3.setAttributeNS(null, 'dy', '1em');\n                    text3.innerHTML += planner.strings.completed_by + ' '\n                        + items[idx].countcompleted + ' '\n                        + planner.strings.students;\n                    text.appendChild(text3);\n                }\n\n                textWrapper.appendChild(text);\n\n                textWrapper.setAttributeNS(null, 'width', '100%');\n\n                const dropdownLink = document.createElement('a');\n                dropdownLink.appendChild(textWrapper);\n                dropdownLink.setAttribute('class', 'dropdown-item');\n                dropdownLink.addEventListener('click', () => {\n                    // This should now open the modal\n                    planner.showModal(items[idx]);\n                });\n                // Temporarily push the created elements in array to evoke later on\n                links.push(dropdownLink);\n\n                if (stackPos <= 1 || mobile) {\n                    newElement = document.createElementNS(NS, 'line');\n                    newElement.setAttributeNS(null, 'x1', xPosEl);\n                    newElement.setAttributeNS(null, 'y1', needleStart);\n                    newElement.setAttributeNS(null, 'x2', xPosEl);\n                    newElement.setAttributeNS(null, 'y2', needleEnd);\n                    newElement.style.stroke = lineStroke;\n                    newElement.style.strokeWidth = '4';\n                    newElement.setAttributeNS(null, 'cursor', 'pointer');\n                    svgElement.prepend(newElement);\n                }\n            });\n            // Stroke colour is dependent on the last date in the overlap block\n            stroke = latestDate < currentDate ? fill : planner.stillDueColour;\n            for (let i = 0; i < countDrawn; i++) {\n                // Create the actual rectangle\n                const rectElement = document.createElementNS(NS, 'rect');\n                rectElement.setAttributeNS(null, 'id', 'overlap_' + Math.floor(overlap[0].x));\n                if (i === 1) {\n                    if (inPastMonth) {\n                        xPos -= (planner.monthWidth + planner.padding + 2);\n                        center -= (planner.monthWidth + planner.padding + 2);\n                        xPosEnd -= (planner.monthWidth + planner.padding + 2);\n                    } else {\n                        xPos += (planner.monthWidth + planner.padding + 2);\n                        center += (planner.monthWidth + planner.padding + 2);\n                        xPosEnd += (planner.monthWidth + planner.padding + 2);\n                    }\n                    needleStart = otherneedleStart;\n                    needleEnd = otherneedleEnd;\n                    yPos = otheryPos;\n                    const newElement = document.createElementNS(NS, 'line');\n                    newElement.setAttributeNS(null, 'x1', xPos);\n                    newElement.setAttributeNS(null, 'y1', needleStart);\n                    newElement.setAttributeNS(null, 'x2', xPos);\n                    newElement.setAttributeNS(null, 'y2', needleEnd);\n                    newElement.style.stroke = stroke;\n                    newElement.style.strokeWidth = '4';\n                    newElement.setAttributeNS(null, 'cursor', 'pointer');\n                    svgElement.prepend(newElement);\n                    rectElement.setAttributeNS(null, 'id', 'overlap_' + Math.floor(overlap[0].x) + '2');\n                }\n\n                rectElement.setAttributeNS(null, 'class', 'merge');\n                // Need to add each dropdown to the widget as can't append to an svg\n                const positionX = xPos - (markerDiameter / 2);\n                const positionY = yPos - (markerDiameter);\n\n                rectElement.setAttributeNS(null, 'x', positionX.toString());\n                rectElement.setAttributeNS(null, 'y', positionY.toString());\n                rectElement.setAttributeNS(null, 'height', markerDiameter.toString());\n                rectElement.setAttributeNS(null, 'width', width.toString());\n                rectElement.setAttributeNS(null, 'rx', 3.5);\n                rectElement.setAttributeNS(null, 'fill', fill);\n                rectElement.style.stroke = stroke;\n                rectElement.style.strokeWidth = '3.5';\n                rectElement.setAttributeNS(null, 'cursor', 'pointer');\n                rectElement.addEventListener('click', (event) => {\n                    planner.openPopup(links, event.clientX);\n                });\n                rectElement.addEventListener('mouseover', () => {\n                    rectElement.style.opacity = '0.5';\n                });\n                rectElement.addEventListener('mouseout', () => {\n                    rectElement.style.opacity = '1';\n                });\n                newElement.after(rectElement);\n\n                // Now put in the number and potentially whether it is mandatory or not\n                const label = overlap.length;\n                const textElement = document.createElementNS(NS, 'text');\n                rectElement.after(textElement);\n                textElement.setAttributeNS(null, 'x', center.toString());\n                textElement.setAttributeNS(null, 'y', yPos - (markerDiameter / 2));\n                textElement.setAttributeNS(null, 'dy', '6px');\n                textElement.setAttributeNS(null, 'class', 'merge');\n                textElement.style.cssText += 'text-anchor:middle;font-weight:bold;font-family:sans-serif';\n                textElement.setAttributeNS(null, 'fill', planner.stillDueColour);\n\n                const text = document.createElementNS(NS, 'tspan');\n                text.textContent = '#' + label;\n                text.style.fill = planner.fontColour;\n                text.setAttributeNS(null, 'class', 'merge');\n                textElement.appendChild(text);\n                if (oneMandatory) {\n                    const asterisk = document.createElementNS(NS, 'tspan');\n                    asterisk.style.fill = planner.stillDueColour;\n                    asterisk.textContent = ' *';\n                    asterisk.setAttributeNS(null, 'class', 'merge');\n                    textElement.appendChild(asterisk);\n                }\n                if (oneGraded) {\n                    textElement.setAttributeNS(null, 'text-decoration', 'underline');\n                    textElement.style.textDecorationColor = planner.stillDueColour;\n                }\n                textElement.setAttributeNS(null, 'cursor', 'pointer');\n                textElement.addEventListener('click', (event) => {\n                    planner.openPopup(links, event.clientX);\n                });\n                textElement.addEventListener('mouseover', () => {\n                    rectElement.style.opacity = '0.5';\n                });\n                textElement.addEventListener('mouseout', () => {\n                    rectElement.style.opacity = '1';\n                });\n            }\n        });\n\n    },\n    openPopup: function(links, mousePosX) {\n        // Now need to add all link elements to the popup\n        const popup = document.getElementById('planner-mergePopup');\n        // Remove elements that were in there before\n        popup.innerHTML = '';\n        // Based on the links, create all dropdown elements\n        popup.style.display = 'block';\n        // Change xpos of popup based on where the mouse is, for desktop view only\n        if (window.innerWidth > 767) {\n            if (mousePosX < window.innerWidth / 2) {\n                // Merge element is on the left half of the screen\n                popup.style.left = (mousePosX - 50).toString() + 'px';\n            } else {\n                // Merge element is on the right half of the screen\n                popup.style.left = (mousePosX - 275 - 50).toString() + 'px';\n            }\n        } else {\n            popup.style.left = (window.innerWidth / 2 - 132).toString() + 'px';\n        }\n        links.forEach(function(link) {\n            const wrapper = document.createElement('div');\n            wrapper.setAttribute('class', 'planner-popupDropdownItem');\n            wrapper.appendChild(link);\n            popup.appendChild(wrapper);\n        });\n    },\n\n    pastMergeMobile: function(weeks, pastWeeks, calendarWeek) {\n        let pastMult = 0;\n        for (let first = pastWeeks[0]; first <= pastWeeks[1]; first++) {\n            if (calendarWeek === first) {\n                pastMult = first - pastWeeks[0];\n            }\n        }\n        return pastMult;\n    },\n\n    nextMergeMobile: function(weeks, nextWeeks, calendarWeek) {\n        let nextMult = 0;\n        for (let first = nextWeeks[0]; first <= nextWeeks[1]; first++) {\n            if (calendarWeek === first) {\n                nextMult = first - nextWeeks[0];\n            }\n        }\n        return nextMult;\n    },\n    closePopup: function() {\n        const popup = document.getElementById('planner-mergePopup');\n        popup.style.display = 'none';\n    },\n    // Takes event data (as fetched from backend), and returns a hex code.\n    getColor: (() => {\n        const\n            now = Date.now() / 1000,\n            threshold = now + 604800; // Seven days in seconds.\n        return event => {\n            const end = event.enddate;\n            return (event.completed && planner.completedColour) // Green.\n                || (event.userid && planner.milestoneColour) // Student milestones → red;\n                || (end < now && planner.primaryMarkerColour) // Teacher events → grey.\n                || (end <= threshold && planner.thresholdColour) // Yellow/Orange\n                || planner.primaryMarkerColour; // Grey.\n        };\n    })(),\n\n    checkForOverlaps: function(markerPositions, markerDiameter, overlapMap, inOverMap, items, mobile) {\n        const inOverMapCheck = function(curVal, indx) {\n            return !!overlapMap[indx].includes(this);\n        };\n        for (let i = 0; i < markerPositions.length; i++) {\n            const occurences = [];\n            const iWeek = planner.getWeek(new Date(items[i].startdate * 1000));\n            for (let j = 0; j < i; j++) {\n                // Flag to determine overlap and add to array\n                let found = false;\n                const jWeek = planner.getWeek(new Date(items[j].startdate * 1000));\n\n                // Can't check for same week as that is absolutely ok\n                if (markerPositions[i].x <= markerPositions[j].x\n                    && (items[i].userid === items[j].userid)\n                ) {\n                    if ((!((markerPositions[i].x + markerDiameter / 2) < (markerPositions[j].x - markerDiameter / 2))) &&\n                        (!(mobile && jWeek !== iWeek))) {\n                        found = true;\n                    }\n                } else if (markerPositions[i].x > markerPositions[j].x\n                    && (items[i].userid === items[j].userid)) {\n                    if ((!((markerPositions[i].x - markerDiameter / 2) > (markerPositions[j].x + markerDiameter / 2))) &&\n                        (!(mobile && jWeek !== iWeek))) {\n                        found = true;\n                    }\n                } else if (markerPositions[i].x === markerPositions[j].x && mobile && (iWeek === jWeek)) {\n                    // This is to find milestones, as in mobile they go on the same one\n                    found = true;\n                }\n                planner.overlapPushOccurences(overlapMap, inOverMapCheck,\n                    markerPositions[j], markerPositions[i],\n                    occurences, found);\n            }\n            if (occurences.length > 1) {\n                const overlapMerge = [];\n                for (let i = 0; i < occurences.length; i++) {\n                    overlapMap[occurences.at(i)].forEach(function(occ) {\n                        overlapMerge.push(occ);\n                    });\n                }\n                // Remove the duplicate values\n                for (let j = 1; j < occurences.length; j++) {\n                    const index = overlapMerge.indexOf(markerPositions[i]);\n                    overlapMerge.splice(index, 1);\n                }\n                // Now remove these from the overlapmap\n                overlapMap = overlapMap.reduce((acc, value, index) => {\n                    if (!occurences.includes(index)) {\n                        acc.push(value);\n                    }\n                    return acc;\n                }, []);\n                overlapMap.push(overlapMerge);\n                occurences.length = 0;\n            }\n        }\n        // Remove items again if it is only a simple stacking, not a merge\n        if (!mobile) {\n            const samePos = [];\n            overlapMap.forEach(function(overlap, idx) {\n                let same = true;\n                overlap.forEach(function(el, idx) {\n                    if (overlap[idx].x !== overlap[0].x) {\n                        same = false;\n                    }\n                });\n                if (same === true) {\n                    samePos.push(idx);\n                }\n            });\n            overlapMap = overlapMap.reduce((acc, value, index) => {\n                if (!samePos.includes(index)) {\n                    acc.push(value);\n                }\n                return acc;\n            }, []);\n        }\n        return overlapMap;\n    },\n\n    overlapPushOccurences: function(overlapMap, inOverMapCheck, markerPosj, markerPosi, occurences, found) {\n        if (found) {\n            const result = overlapMap.findIndex(inOverMapCheck, markerPosj);\n            if (result >= 0) {\n                if (!overlapMap[result].includes(markerPosi)) {\n                    overlapMap[result].push(markerPosi);\n                    occurences.push(result);\n                }\n            } else {\n                occurences.push(overlapMap.push([markerPosi, markerPosj]) - 1);\n            }\n        }\n    },\n    drawLegend: function(items) {\n        const svgWidth = svgcontainer?.offsetWidth ?? 600;\n        const mobile = (window.innerWidth < 767);\n\n        plannerLegend.setAttribute('width', svgWidth);\n\n        const info = document.createElement('div');\n        info.setAttribute('id', 'planner-info');\n\n        const infoButton = document.createElement('button');\n        infoButton.setAttribute('id', 'planner-infoMobile');\n        infoButton.setAttribute('type', 'button');\n        infoButton.setAttribute('class', 'planner-checkBtn');\n        infoButton.addEventListener('click', () => {\n            info.style.left = '0';\n        });\n        infoButton.addEventListener('mouseover', () => {\n            infoButton.style.opacity = '0.5';\n        });\n        infoButton.addEventListener('mouseout', () => {\n            infoButton.style.opacity = '1';\n        });\n        infoButton.innerText = 'Info';\n\n        if (!mobile) {\n            plannerLegend.appendChild(infoButton);\n            plannerLegend.appendChild(info);\n        } else {\n            // Append button and info to options section on mobile\n            plannerOptions.appendChild(infoButton);\n            plannerOptions.appendChild(info);\n        }\n\n        const start = planner.startDate.toLocaleString(planner.locale, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric'\n        });\n        const end = planner.endDate.toLocaleString(planner.locale, {year: 'numeric', month: 'numeric', day: 'numeric'});\n\n        const legend = {};\n        const marker = {};\n\n        items.forEach(function(item) {\n            const newdate = new Date(item.startdate * 1000);\n            if (newdate <= planner.endDate && (planner.isteacher || item.visible)) {\n                if (!(item.type in legend)) {\n                    legend[item.type] = 0;\n                }\n                if (newdate < start || newdate > end) {\n                    return;\n                }\n                legend[item.type] = legend[item.type] + 1;\n                marker[item.type] = item.marker;\n            }\n        });\n        const filter = [];\n        let innerHTML = '';\n        for (let prop in legend) {\n            if (legend[prop] !== 0) {\n                filter.push(prop);\n                if (Object.prototype.hasOwnProperty.call(legend, prop)) {\n                    const propActual = eventStrings[prop] ?? prop;\n                    innerHTML += '<div class=\"d-inline-block\" style=\"padding: 5px 10px; font-size: 16px; width: 220px;\">'\n                        + '<div class=\"d-inline-block font-weight-bold text-center\" style=\"width: 32px; height: 32px;'\n                        + 'line-height: 28px; border-radius: 20%; border: 4px solid #a09e9e; color: #fff;'\n                        + 'background: #a09e9e; margin-right: 6px;\">'\n                        + prop[0] + '</div>' + legend[prop] + ' ' + propActual + '</div>';\n                }\n            }\n        }\n        innerHTML += '<p class=\\'ml-3 mb-0\\' style=\\'font-size: 0.85em;\\'>' + planner.strings.legend + '</p>';\n        planner.includeTypes = filter;\n        if (planner.includedTypes === null) {\n            planner.includedTypes = planner.includeTypes;\n        }\n        info.innerHTML = innerHTML;\n    },\n\n    showModal: function(item) {\n        if (planner.isteacher) {\n            log('OPEN', 'EVENT', null, item.id);\n            planner.createEventModal(item);\n        } else {\n            if ('userid' in item && 'completed' in item) {\n                // TODO add info for log plugin.\n                log('OPEN', 'MILESTONE', null, item.id);\n                planner.createMilestoneModal(item);\n\n            } else {\n                log('OPEN', 'EVENT', null, item.id);\n                planner.createEventCompletedModal(item);\n            }\n        }\n    },\n\n    createMenu: function() {\n        if (plannerMenu !== null) {\n            svgWidth = plannerMenu.offsetWidth;\n        }\n        plannerMenu.setAttribute('width', svgWidth);\n\n        const form = document.createElement('form');\n        form.addEventListener('click', (event) => {\n            event.stopPropagation(); // Needed to make sure the form does not disappear when a checkbox in it is clicked\n        });\n        form.setAttribute('id', 'menuform');\n        form.setAttribute('style', 'font-size: 16px; font-weight: normal; font-famiy: sans-serif');\n        planner.includeTypes.forEach(function(item) {\n            const input = document.createElement('input');\n            const label = document.createElement('label');\n            label.setAttribute('for', item);\n            label.innerText = item;\n            input.setAttribute('type', 'checkbox');\n            input.setAttribute('value', item);\n            input.setAttribute('id', item);\n            if (planner.includedTypes.includes(item)) {\n                input.checked = true;\n            }\n            input.addEventListener('change', () => {\n                if (planner.includedTypes.includes(item)) {\n                    log('DESELECT', 'FILTER', item);\n                    planner.includedTypes = planner.includedTypes.filter(function(el) {\n                        return el !== item;\n                    });\n                } else {\n                    log('SELECT', 'FILTER', item);\n                    planner.includedTypes.push(item);\n                }\n                planner.update();\n            });\n\n            label.appendChild(input);\n            form.appendChild(label);\n        });\n\n        // Create button that will appear for mobile view\n        let mobilebutton = document.createElement('button');\n        mobilebutton.setAttribute('type', 'button');\n        mobilebutton.setAttribute('id', 'planner-check');\n        mobilebutton.setAttribute('class', 'planner-checkBtn');\n        mobilebutton.addEventListener('click', () => {\n            form.style.left = '0';\n        });\n        mobilebutton.addEventListener('mouseover', () => {\n            mobilebutton.style.opacity = '0.5';\n        });\n        mobilebutton.addEventListener('mouseout', () => {\n            mobilebutton.style.opacity = '1';\n        });\n        mobilebutton.innerText = planner.strings.options;\n        plannerOptions.appendChild(mobilebutton);\n\n        const actionForm = document.createElement('form');\n        if (!planner.isteacher) {\n            let promises = Ajax.call([\n                {\n                    methodname: 'lytix_planner_allow_personalized_notifications',\n                    args: {contextid: planner.contextid, courseid: planner.courseid},\n                }\n            ]);\n            promises[0].then(function(response) {\n                if (response.allow) {\n                    actionForm.appendChild(planner.addNotificationUserSettingsBtn());\n                }\n                return;\n            }).catch(function(ex) {\n                Log.warn(ex);\n            });\n            actionForm.appendChild(planner.addMilestoneBtn());\n        } else {\n            actionForm.appendChild(planner.addNotificationCourseSettingsBtn());\n            actionForm.appendChild(planner.addEventBtn());\n        }\n        // Best to attach the view selection button to the form here, add to options form\n        actionForm.appendChild(planner.addViewSelectionDrpdwn());\n        // Append to either actions or options to allow separation\n        plannerOptions.appendChild(form);\n        plannerActions.appendChild(actionForm);\n    },\n\n    resetModal: function() {\n        Yui.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        // Reload that changes in view are done and a new fresh modal is created.\n        planner.update();\n    },\n\n    checkDateandTime: function(MandatoryFlag, e, modal) {\n        let startdate;\n        let enddate;\n        for (let i = 0; i <= 5; i++) {\n            if (i === 0) {\n                startdate = 'startdate';\n                enddate = 'enddate';\n            } else {\n                startdate = 'date' + i;\n                enddate = 'endtime' + i;\n            }\n            const eventDate = new Date(document.getElementById('id_' + startdate + '_year').value,\n                document.getElementById('id_' + startdate + '_month').value - 1,\n                document.getElementById('id_' + startdate + '_day').value);\n            const timestampofevent = eventDate.getTime();\n            if ((timestampofevent / 1000) < (planner.startDate.getTime() / 1000)\n                || (timestampofevent / 1000) > (planner.endDate.getTime / 1000)) {\n                MandatoryFlag = false;\n                e.preventDefault();\n                const timeoutofrange = getString('timeoutofrange', 'lytix_planner');\n                timeoutofrange.then(function(localizedString) {\n                    modal.setBody(modal.getBody().innerHTML);\n                    modal.getBody().append(localizedString);\n                    return localizedString;\n                }).catch((error) => {\n                    Log.warn(error);\n                    throw error;\n                });\n            }\n            const starthour = parseInt(document.getElementById('id_' + startdate + '_hour').value);\n            const endhour = parseInt(document.getElementById('id_' + enddate + 'hour').value);\n            const endminute = parseInt(document.getElementById('id_' + enddate + 'minute').value);\n            const startminute = parseInt(document.getElementById('id_' + startdate + '_minute').value);\n            if ((endhour < starthour) || (starthour === endhour && endminute < startminute)) {\n                MandatoryFlag = false;\n                e.preventDefault();\n                const timesmaller = getString('time_smaller', 'lytix_planner');\n                timesmaller.then(function(localizedString) {\n                    modal.setBody(modal.getBody().innerHTML);\n                    modal.getBody().append(localizedString);\n                    return localizedString;\n                }).catch((error) => {\n                    Log.warn(error);\n                    throw error;\n                });\n            }\n            if (document.getElementById('id_moreevents').value == 1) {\n                break;\n            }\n        }\n        return MandatoryFlag;\n    },\n\n    createEventModal: function(item) {\n        const form = loadFragment('lytix_planner', 'new_event_form', planner.contextid, item);\n        const title = planner.strings.event;\n        ModalFactory.create({\n            type: ModalType,\n            title: title,\n            body: form,\n        }).then(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            const root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                const formData = root.find('form').serialize();\n                let MandatoryFlag = true;\n                if (document.getElementById('id_title').value === \"\") {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                }\n                MandatoryFlag = planner.checkDateandTime(MandatoryFlag, e, modal);\n                const selectedOption =\n                    document.getElementById('id_type').options[document.getElementById('id_type').selectedIndex];\n                // Check mandatory fields.\n                if (selectedOption.text === \"Other\") {\n                    MandatoryFlag = false;\n                    if (document.getElementById('id_select_other_german').value === '' ||\n                        document.getElementById('id_select_other_english').value === '') {\n                        e.preventDefault();\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(planner.strings.type_required);\n                    } else {\n                        if (planner.includeTypes.includes(document.getElementById('id_select_other_german').value) ||\n                            planner.includeTypes.includes(document.getElementById('id_select_other_english').value)) {\n                            e.preventDefault();\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(planner.strings.type_exists);\n                        } else {\n                            MandatoryFlag = true;\n                        }\n                    }\n                }\n                if (MandatoryFlag) {\n                    // Call the webservice with formData as param.\n                    const promises = Ajax.call([\n                        {\n                            methodname: 'local_lytix_lytix_planner_event',\n                            args: {\n                                contextid: planner.contextid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].then(function() {\n                        if (!planner.includedTypes.includes(selectedOption.text)) {\n                            planner.includedTypes.push(selectedOption.text);\n                            planner.includedTypes = null;\n                        }\n                        planner.resetModal();\n                        planner.update();\n                        return;\n                    }).catch(function(ex) {\n                        // TODO Find solution to show error message in modal.\n                        Log.warn(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on('modal-save-delete-cancel:delete', function() {\n                const promises = Ajax.call([\n                    {\n                        methodname: 'local_lytix_lytix_planner_delete_event',\n                        args: {\n                            contextid: planner.contextid,\n                            courseid: planner.courseid,\n                            userid: planner.userid,\n                            id: item.id\n                        },\n                    }\n                ]);\n                promises[0].then(function(response) {\n                    if (response.success) {\n                        planner.resetModal();\n                        planner.update();\n                    }\n                    return;\n                }).catch(function(ex) {\n                    Log.warn(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'EVENT', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n            return;\n        }).catch(function(ex) {\n            Log.warn(ex);\n        });\n    },\n\n    createEventCompletedModal: function(item) {\n        // Set correct userid.\n        item.userid = planner.userid;\n        item.eventid = item.id;\n        const form = loadFragment('lytix_planner', 'new_event_completed_form', planner.contextid, item);\n\n        const title = planner.strings.event_completed;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }).then(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            const root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                // Convert all the form elements values to a serialised string.\n                const formData = root.find('form').serialize();\n                // Call the webservice with formData as param.\n                const promises = Ajax.call([\n                    {\n                        methodname: 'local_lytix_lytix_planner_event_completed',\n                        args: {\n                            contextid: planner.contextid,\n                            jsonformdata: JSON.stringify(formData)\n                        },\n                    }\n                ]);\n                promises[0].then(function() {\n                    if (!planner.includeTypes.includes(root.find('form')[0][7].value)) {\n                        planner.includeTypes.push(root.find('form')[0][7].value);\n                    }\n                    planner.resetModal();\n                    return;\n                }).catch(function(ex) {\n                    // TODO Find solution to show error message in modal.\n                    Log.warn(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                delete item.userid;\n                delete item.eventid;\n                log('CLOSE', 'EVENT', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n            return;\n        }).catch(function(ex) {\n            Log.warn(ex);\n        });\n    },\n\n    createUserSettingsModal: function() {\n        // Set correct userid.\n        const params = {};\n        params.userid = planner.userid;\n        params.courseid = planner.courseid;\n        const form = loadFragment('lytix_planner', 'new_user_notification_settings_form',\n            planner.contextid, params);\n\n        const title = planner.strings.open_settings;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }).then(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            const root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                // Convert all the form elements values to a serialised string.\n                const formData = root.find('form').serialize();\n                // Call the webservice with formData as param.\n                const promises = Ajax.call([\n                    {\n                        methodname: 'lytix_planner_store_user_notification_settings',\n                        args: {\n                            contextid: planner.contextid,\n                            courseid: planner.courseid,\n                            userid: planner.userid,\n                            jsonformdata: JSON.stringify(formData)\n                        },\n                    }\n                ]);\n                promises[0].then(function(response) {\n                    if (!response.success) {\n                        Log.warn('Error storing user notification settings!');\n                    }\n                    planner.resetModal();\n                    return;\n                }).catch(function(ex) {\n                    Log.warn(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'SETTINGS');\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n            return;\n        }).catch(function(ex) {\n            Log.warn(ex);\n        });\n    },\n\n    createCourseSettingsModal: function() {\n        const form = loadFragment('lytix_planner', 'new_course_notification_settings_form',\n            planner.contextid, null);\n\n        const title = planner.strings.open_settings;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }).then(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            const root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                const formData = root.find('form').serialize();\n                let MandatoryField = true;\n                // Check mandatory fields.\n                if (document.getElementById('id_new_type').checked === true) {\n                    MandatoryField = false;\n                    if (document.getElementById('id_select_other_german').value === '' ||\n                        document.getElementById('id_select_other_english').value === '') {\n                        e.preventDefault();\n                        modal.setBody(modal.getBody().innerHTML);\n                        // TODO remove, is done by the modal.\n                        modal.getBody().append(planner.strings.type_required);\n                    } else {\n                        if (planner.includeTypes.includes(document.getElementById('id_select_other_german').value) ||\n                            planner.includeTypes.includes(document.getElementById('id_select_other_english').value)) {\n                            e.preventDefault();\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(planner.strings.type_exists);\n                        } else {\n                            MandatoryField = true;\n                        }\n                    }\n                }\n                planner.includeTypes.forEach(function(types) {\n                    if (document.getElementById('id_delete' + types) &&\n                        document.getElementById('id_delete' + types).checked === true) {\n                        MandatoryField = false;\n                        e.preventDefault();\n                        const typenotdeleteable = getString('type_not_deleteable', 'lytix_planner');\n                        typenotdeleteable.then(function(localizedString) {\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(localizedString);\n                            return localizedString;\n                        }).catch((error) => {\n                            Log.warn(error);\n                            throw error;\n                        });\n                    }\n                });\n                if (document.getElementById('id_softlock').checked &&\n                    (document.getElementById('id_new_type').checked === false && MandatoryField) || MandatoryField) {\n                    // Call the webservice with formData as param.\n                    const promises = Ajax.call([\n                        {\n                            methodname: 'lytix_planner_store_course_notification_settings',\n                            args: {\n                                contextid: planner.contextid,\n                                courseid: planner.courseid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].then(function(response) {\n                        if (!response.success) {\n                            Log.warn('Error storing custom course settings!');\n                        }\n                        planner.includedTypes = null;\n                        planner.resetModal();\n                        planner.update();\n                        return;\n                    }).catch(function(ex) {\n                        Log.warn(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'SETTINGS');\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n            return;\n        }).catch(function(ex) {\n            Log.warn(ex);\n        });\n    },\n\n    addMilestoneBtn: function() {\n        const item = {};\n        item.id = -1;\n        item.userid = planner.userid;\n        item.marker = 'M';\n        item.color = '#6495ED';\n\n        const addMilestoneBtn = document.createElement('button');\n        addMilestoneBtn.setAttribute('class', 'btn btn-primary');\n        addMilestoneBtn.setAttribute('type', 'button');\n        addMilestoneBtn.setAttribute('value', 'Add Milestone');\n        addMilestoneBtn.setAttribute('data-action', 'Add Milestone');\n        addMilestoneBtn.setAttribute('style', 'display: inline-block; margin: 4px 4px 4px 12px; float: right;');\n        const textPresent = planner.strings.add_milestone;\n        addMilestoneBtn.appendChild(document.createTextNode(textPresent));\n        addMilestoneBtn.addEventListener('click', () => {\n            log('OPEN', 'MILESTONE', null, item.id);\n            planner.createMilestoneModal(item);\n        });\n        return addMilestoneBtn;\n    },\n\n    addEventBtn: function() {\n        const item = {};\n        item.id = -1;\n        item.userid = planner.userid;\n        item.marker = 'L';\n        item.color = '#6495ED';\n        item.visible = 1;\n        const addEventBtn = document.createElement('button');\n        addEventBtn.setAttribute('class', 'btn btn-primary');\n        addEventBtn.setAttribute('type', 'button');\n        addEventBtn.setAttribute('value', 'Add Event');\n        addEventBtn.setAttribute('data-action', 'Add Event');\n        addEventBtn.setAttribute('style', 'display: inline-block; margin: 4px 4px 4px 12px; float: right;');\n        const textPresent = planner.strings.add_event;\n        addEventBtn.appendChild(document.createTextNode(textPresent));\n        addEventBtn.addEventListener('click', () => {\n            log('OPEN', 'EVENT', null, item.id);\n        });\n        addEventBtn.addEventListener('click', () => {\n            planner.createEventModal(item);\n        });\n        return addEventBtn;\n    },\n\n    addNotificationUserSettingsBtn: function() {\n        const userSettingsBtn = document.createElement('button');\n        userSettingsBtn.setAttribute('class', 'btn btn-primary');\n        userSettingsBtn.setAttribute('type', 'button');\n        userSettingsBtn.setAttribute('value', 'notification_user_settings');\n        userSettingsBtn.setAttribute('data-action', 'notification_user_settings');\n        userSettingsBtn.setAttribute('style', 'display: inline-block; margin: 4px 4px 4px 12px; float: right;');\n        const textPresent = planner.strings.open_settings;\n        userSettingsBtn.appendChild(document.createTextNode(textPresent));\n        userSettingsBtn.addEventListener('click', () => {\n            log('OPEN', 'SETTINGS');\n            planner.createUserSettingsModal();\n        });\n        return userSettingsBtn;\n    },\n\n    addNotificationCourseSettingsBtn: function() {\n        const userSettingsBtn = document.createElement('button');\n        userSettingsBtn.setAttribute('class', 'btn btn-primary');\n        userSettingsBtn.setAttribute('type', 'button');\n        userSettingsBtn.setAttribute('value', 'notification_course_settings');\n        userSettingsBtn.setAttribute('data-action', 'notification_course_settings');\n        userSettingsBtn.setAttribute('style', 'display: inline-block; margin: 4px 4px 4px 12px; float: right;');\n        const textPresent = planner.strings.open_settings;\n        userSettingsBtn.appendChild(document.createTextNode(textPresent));\n        userSettingsBtn.addEventListener('click', () => {\n            log('OPEN', 'SETTINGS');\n            planner.createCourseSettingsModal();\n        });\n        return userSettingsBtn;\n    },\n\n    addViewSelectionDrpdwn: function() {\n        const viewSelectionsDrdwn = document.createElement('div');\n        viewSelectionsDrdwn.setAttribute('class', 'planner-viewDropdown');\n        const drdwnBtn = document.createElement('button');\n        drdwnBtn.setAttribute('class', 'btn btn-secondary dropdown-toggle');\n        drdwnBtn.setAttribute('type', 'button');\n        drdwnBtn.setAttribute('id', 'dropdownMenuButton');\n        drdwnBtn.setAttribute('data-toggle', 'dropdown');\n        drdwnBtn.setAttribute('aria-haspopup', 'true');\n        drdwnBtn.setAttribute('aria-expanded', 'false');\n        drdwnBtn.setAttribute('style', 'display: inline-block; margin: 4px 4px 4px 12px; float: right;');\n\n        drdwnBtn.innerText = planner.strings.view + ': ' + planner.view;\n        viewSelectionsDrdwn.appendChild(drdwnBtn);\n\n        const menu = document.createElement('div');\n        menu.setAttribute('class', 'dropdown-menu');\n        menu.setAttribute('aria-labelledby', 'dropdownMenuButton');\n\n        const view1 = document.createElement('a');\n        view1.setAttribute('class', 'dropdown-item');\n        view1.setAttribute('href', '#');\n        view1.innerText = planner.strings.month;\n        view1.addEventListener('click', () => {\n            planner.view = view1.innerText;\n            drdwnBtn.innerText = planner.view;\n            planner.update();\n            // Here we also need to trigger the event of changing the layout of planner\n        });\n\n        const view3 = document.createElement('a');\n        view3.setAttribute('class', 'dropdown-item');\n        view3.setAttribute('href', '#');\n        view3.innerText = '3 ' + planner.strings.months;\n        view3.addEventListener('click', () => {\n            planner.view = view3.innerText;\n            drdwnBtn.innerText = planner.view;\n            planner.update();\n            // Here we also need to trigger the event of changing the layout of planner\n        });\n        const viewAll = document.createElement('a');\n        viewAll.setAttribute('class', 'dropdown-item');\n        viewAll.setAttribute('href', '#');\n        viewAll.innerText = 'SEMESTER';\n        viewAll.addEventListener('click', () => {\n            planner.view = viewAll.innerText;\n            drdwnBtn.innerText = planner.view;\n            planner.update();\n            // Here we also need to trigger the event of changing the layout of planner\n        });\n        // Append the 3 view options\n        menu.appendChild(view1);\n        menu.appendChild(view3);\n        menu.appendChild(viewAll);\n\n        viewSelectionsDrdwn.appendChild(menu);\n\n        return viewSelectionsDrdwn;\n    },\n\n    createMilestoneModal: function(item) {\n        const form = loadFragment('lytix_planner', 'new_milestone_form', planner.contextid, item);\n        const title = planner.strings.Milestone;\n        ModalFactory.create({\n            type: ModalType,\n            title: title,\n            body: form,\n        }).then(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            const root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                const formData = root.find('form').serialize();\n                let MandatoryFlag = true;\n                if (document.getElementById('id_title').value === '') {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                }\n                const milestoneDate = new Date(document.getElementById('id_startdate_year').value,\n                    document.getElementById('id_startdate_month').value - 1,\n                    document.getElementById('id_startdate_day').value);\n                const timestampofmilestone = milestoneDate.getTime();\n                if (timestampofmilestone < planner.startDate || timestampofmilestone > planner.endDate) {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                    const timeoutofrange = getString('timeoutofrange', 'lytix_planner');\n                    timeoutofrange.then(function(localizedString) {\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(localizedString);\n                        return localizedString;\n                    }).catch((error) => {\n                        Log.warn(error);\n                        throw error;\n                    });\n                }\n                const starthour = parseInt(document.getElementById('id_startdate_hour').value);\n                const endhour = parseInt(document.getElementById('id_hour').value);\n                const endminute = parseInt(document.getElementById('id_minute').value);\n                const startminute = parseInt(document.getElementById('id_startdate_minute').value);\n                if ((endhour < starthour) || (starthour === endhour && endminute < startminute)) {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                    const timesmaller = getString('time_smaller', 'lytix_planner');\n                    timesmaller.then(function(localizedString) {\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(localizedString);\n                        return localizedString;\n                    }).catch((error) => {\n                        Log.warn(error);\n                        throw error;\n                    });\n                }\n                if (MandatoryFlag) {\n                    // Call the webservice with formData as param.\n                    const promises = Ajax.call([\n                        {\n                            methodname: 'local_lytix_lytix_planner_milestone',\n                            args: {\n                                contextid: planner.contextid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].then(function() {\n                        if (!planner.includedTypes.includes('Milestone')) {\n                            planner.includedTypes.push('Milestone');\n                        }\n                        planner.resetModal();\n                        return;\n                    }).catch(function(ex) {\n                        // TODO Find solution to show error message in modal.\n                        Log.warn(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on('modal-save-delete-cancel:delete', function() {\n                const promises = Ajax.call([\n                    {\n                        methodname: 'local_lytix_lytix_planner_delete_milestone',\n                        args: {\n                            contextid: planner.contextid,\n                            courseid: planner.courseid,\n                            userid: planner.userid,\n                            id: item.id\n                        },\n                    }\n                ]);\n                promises[0].then(response => {\n                    if (response.success) {\n                        planner.resetModal();\n                        planner.update();\n                    }\n                    return;\n                }).catch(function(ex) {\n                    Log.warn(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'MILESTONE', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n            return;\n        }).catch(function(ex) {\n            Log.warn(ex);\n        });\n    },\n\n    renderModalFail: function(ex, id) {\n        document.querySelector('#' + id + '.modal-body').innerHTML\n            = planner.strings.error_text\n            + '<p>'\n            + ex.message\n            + '</p>';\n    },\n\n    update: function() {\n        const urlParams = new URLSearchParams(window.location.search);\n        let id = 0;\n        if (urlParams.has('id')) {\n            id = urlParams.get('id');\n        }\n        Ajax.call([{\n            methodname: 'local_lytix_lytix_planner_get',\n            // XXX ‘isstudent’ in WS call is misleading, we had to reverse logic and check for teacher role instead.\n            // See issue: https://gitlab.tugraz.at/llt/moodledev/plugindev/lytix/-/issues/73\n            args: {id: id, contextid: planner.contextid, isstudent: !planner.isteacher}\n        }])[0]\n            .then(function(response) {\n                planner.init(response);\n                planner.storeEvents(response.items);\n                planner.drawLegend(planner.data.items);\n                planner.createMenu();\n                planner.drawMarker(planner.data.items);\n                planner.drawplanner();\n                return;\n            })\n            .catch(function(ex) {\n                document.getElementById('planner_menu').innerHTML\n                    = planner.strings.error_text\n                    + '<p>'\n                    + ex.message\n                    + '</p>';\n            });\n    },\n\n    // Finding way around using native JS to calculate week numbers\n    // Source: https://weeknumber.com/how-to/javascript\n    // Returns the ISO week of the date.\n    getWeek: function(curDate) {\n        const date = new Date(curDate.getTime());\n        date.setHours(0, 0, 0, 0);\n        // Thursday in current week decides the year.\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\n        // January 4 is always in week 1.\n        const week1 = new Date(date.getFullYear(), 0, 4);\n        // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000\n            - 3 + (week1.getDay() + 6) % 7) / 7);\n    },\n};\n\nexport const init = async(contextid, courseid, userid, isteacher, locale) => {\n    planner.isteacher = isteacher;\n    locale = Widget.convertLocale(locale);\n\n    planner.strings = await getStrings({\n        lytix_planner: { // eslint-disable-line camelcase\n            identical: [\n                'add_milestone',\n                'add_event',\n                'Milestone',\n                'event',\n                'event_completed',\n                'error_text',\n                'loading_msg',\n                'open_settings',\n                'type_exists',\n                'type_required',\n                'costum_settings',\n                'event_limit',\n                'legend',\n                'view',\n                'month',\n                'months',\n                'next',\n                'previous_month',\n                'options',\n                'calendarweek',\n                'completed_by',\n                'students',\n                'description_teacher',\n                'description_student',\n                'Milestone',\n                'Lecture',\n                'Exam',\n                'Assignment',\n                'Feedback',\n                'Interview',\n                'Other',\n                'Quiz'\n           ],\n        },\n    });\n\n    // The following block is a consequence of questionable design decisions in the backend:\n    // In the database event types are stored as their English and German name joined by an underscore.\n    // Instead of a proper identifier, we get either the German or the English part, depending on the current language.\n    // Because we use custom language strings to label the event type, not the string provided by the webservice,\n    // we have to map the language strings to the either German or English event type name.\n    {\n        const\n            strings = planner.strings,\n            // The following arrays are connected by index: For example, index 2 in each array is the translation of the other.\n            stringIdentifiers = ['Assignment', 'Exam', 'Feedback', 'Interview', 'Lecture', 'Milestone', 'Quiz'],\n            eventIdentifiers = locale.slice(0, 2) == 'de'\n                ? ['Aufgabe', 'Prüfung', 'Feedback', 'Abgabegespräch', 'Vorlesung', 'Meilenstein', 'Quiz']\n                : stringIdentifiers;\n        for (let i = stringIdentifiers.length - 1; i >= 0; --i) {\n            eventStrings[eventIdentifiers[i]] = strings[stringIdentifiers[i]];\n        }\n    }\n\n    planner.drawLoading();\n    planner.contextid = contextid;\n    planner.courseid = courseid;\n    planner.userid = userid;\n    planner.locale = locale;\n    planner.dateFormatter = new Intl.DateTimeFormat(planner.locale, {\n        day: 'numeric', month: 'numeric', year: '2-digit',\n    });\n    planner.timeFormatter = new Intl.DateTimeFormat(planner.locale, {\n        hour: '2-digit', minute: '2-digit',\n    });\n    planner.update();\n\n    log = makeLoggingFunction(userid, courseid, contextid, 'planner');\n\n    let resizeTimer;\n    window.addEventListener('resize', () => {\n        clearTimeout(resizeTimer);\n        resizeTimer = setTimeout(() => {\n            planner.update();\n        }, 250);\n    });\n};\n"],"names":["svgcontainer","document","getElementById","plannerLeft","plannerRight","plannerLegend","plannerOptions","plannerActions","plannerMenu","NS","log","svgElement","svgHeight","svgWidth","eventStrings","planner","contextid","courseid","userid","isteacher","strings","locale","isresizing","paddingleft","paddingright","padding","barHeight","days","months","weeks","startDate","endDate","yearStartDate","daysWidth","monthWidth","weekWidth","weekHeight","data","showMonthFlag","primaryMarkerColour","indicatorColour","fontColour","indicatorStrokeColour","stillDueColour","milestoneColour","completedColour","thresholdColour","view","inactiveMonths","activeMonths","currentMonth","weeksInMonth","Map","daysInWeek","autoScrolling","includeTypes","includedTypes","storedEvents","storedMilestones","dateFormatter","timeFormatter","init","offsetWidth","innerHTML","mobileArrows","getElementsByClassName","length","parentNode","removeChild","createElementNS","setAttributeNS","addEventListener","event","contains","target","mergeElements","merge","forEach","element","closePopup","window","innerWidth","style","left","innerText","description_teacher","description_student","Date","date","setHours","setMinutes","utcStart","UTC","getFullYear","getMonth","getDate","utcEnd","Math","floor","currentMonthIndex","copiedStartDate","getTime","i","genericMonthCount","weekNR","this","getWeek","endWeekNR","set","toString","setMonth","initMobile","initDesktop","appendChild","arrows","createArrows","createIndicators","rightDrop","dayWidth","overflowX","sWidth","pos","scrollToAmount","scrollTo","top","behavior","addHiddenMonths","push","nextM","createElement","setAttribute","next","newPos","scrollLeft","toFixed","month","tooSmall","plannerView","arrowPlacing","prepend","leftPlace","rightPlace","middlePlace","createMobileMonth","getType","a","type","mobile","leftArrow","drawing","position","bottom","dropContainer","leftButton","getAttribute","dropMenu","border","rightArrow","drawingRight","right","rightButton","leftIndicator","rightIndicator","leftGroup","rightGroup","indicator","fill","stroke","strokeWidth","leftText","cssText","rightText","area","year","monthText","current","toLocaleString","scrollPos","rightDropMenu","leftDropMenu","child","lastElementChild","firstElementChild","nextMLeft","previous_month","mobileHeader","currentDate","updateIndicatorAmounts","leftAmount","rightAmount","key","value","at","textContent","storeEvents","events","startdate","get","drawLoading","img","loading_msg","updateSvgHeight","height","querySelector","drawplanner","y","barPosY","newdate","drawMobile","drawDesktop","newElementline","x","width","newElementtext","textx","textAnchor","fontWeight","fontFamily","weekAmount","j","firstDate","week","firstDateDay","getDay","firstDay","setDate","lastDay","daywith","diff","pastMonthLine","opacity","nextMonthLine","x1","weekline","calendarweek","toLocaleDateString","day","weekLevel","calendarWeek","mult","first","inNextMonthMult","nextWeeks","nextMult","inPastMonthMult","pastWeeks","pastMult","drawSecondTitleLine","item","line2","firstline","hover","hoverBack","title","parseInt","words","split","line1","line2text","test","substring","slice","join","moveHover","secondline","thirdline","markerDiameter","getAttributeNS","difference","addThirdLineHover","completed_by","countcompleted","students","createSecondLineMerge","text1","drawMarker","items","newElement","filter","indexOf","visible","stackTracker","milestones","max","count","markerPositions","Array","overlapMap","itemDate","itemWeek","monthOffset","xPos","stackTrack","currentStackCount","stackPos","tooltipHeight","needleLength","eventsStartY","milestonesStartY","index","now","inOverMap","curVal","indx","includes","checkForOverlaps","countDrawn","inPastMonth","inNextMonth","find","setTime","enddate","needleStart","needleEnd","yPos","tooltipY","otherneedleStart","otherneedleEnd","otheryPos","othertooltipY","copiedDate","undefined","anchor","display","fontSize","format","getColor","label","mandatory","graded","showModal","rectElement","id","after","textElement","textDecorationColor","text","asterisk","overlap","latestDate","oneMandatory","oneGraded","pastMergeMobile","nextMergeMobile","sort","b","xPosEnd","center","links","idx","lineStroke","xPosEl","textWrapper","text0","text2","text3","dropdownLink","positionX","positionY","openPopup","clientX","mousePosX","popup","link","wrapper","threshold","end","completed","inOverMapCheck","occurences","iWeek","found","jWeek","overlapPushOccurences","overlapMerge","occ","splice","reduce","acc","samePos","same","el","markerPosj","markerPosi","result","findIndex","drawLegend","info","infoButton","start","legend","marker","prop","Object","prototype","hasOwnProperty","call","propActual","createEventModal","createMilestoneModal","createEventCompletedModal","createMenu","form","stopPropagation","input","checked","update","mobilebutton","options","actionForm","addNotificationCourseSettingsBtn","addEventBtn","Ajax","methodname","args","then","response","allow","addNotificationUserSettingsBtn","catch","ex","warn","addMilestoneBtn","addViewSelectionDrpdwn","resetModal","use","M","core_formchangechecker","reset_form_dirty_state","checkDateandTime","MandatoryFlag","e","modal","timestampofevent","preventDefault","localizedString","setBody","getBody","append","error","starthour","endhour","endminute","startminute","create","ModalType","body","setLarge","show","root","getRoot","on","ModalEvents","save","formData","serialize","selectedOption","selectedIndex","type_required","type_exists","jsonformdata","JSON","stringify","success","hidden","hide","destroy","cancel","eventid","event_completed","ModalFactory","types","SAVE_CANCEL","createUserSettingsModal","params","open_settings","createCourseSettingsModal","MandatoryField","color","textPresent","add_milestone","createTextNode","add_event","userSettingsBtn","viewSelectionsDrdwn","drdwnBtn","menu","view1","view3","viewAll","Milestone","timestampofmilestone","renderModalFail","error_text","message","urlParams","URLSearchParams","location","search","has","isstudent","curDate","week1","round","async","Widget","convertLocale","lytix_planner","identical","stringIdentifiers","eventIdentifiers","resizeTimer","Intl","DateTimeFormat","hour","minute","clearTimeout","setTimeout"],"mappings":"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"}