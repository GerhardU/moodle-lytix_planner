{"version":3,"file":"planner.min.js","sources":["../src/planner.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {loadFragment} from 'core/fragment';\nimport Yui from 'core/yui';\nimport {get_string as getString} from 'core/str';\nimport {makeLoggingFunction} from 'lytix_logs/logs';\nimport ModalType from 'lytix_planner/modal_save_delete_cancel';\nimport {getStrings} from 'lytix_helper/widget';\n\nconst d3 = window.d3;\nvar moment = window.moment;\n\nvar svgcontainer = document.getElementById('PlannerWidget');\nvar svgElement = null;\n\nvar svgHeight = 250;\nvar svgWidth = 600;\n\nlet log; // Will be the logging function.\n\nvar planner = {\n\n    contextid: -1,\n    courseid: -1,\n    userid: -1,\n    isteacher: -1,\n    strings: null,\n\n    isresizing: false,\n\n    paddingleft: 20,\n    paddingright: 60,\n    padding: 4,\n    barHeight: 20,\n    days: 0,\n    months: 0,\n    startDate: null,\n    endDate: null,\n    daysWidth: 0,\n    monthWidth: 0,\n    data: null,\n    showMonthFlag: false,\n\n    includeTypes: null,\n    includedTypes: null,\n\n    storedEvents: new Map(),\n    storedMilestones: new Map(),\n\n    dateFormatter: new Intl.DateTimeFormat('de-AT', {\n        day: 'numeric', month: 'numeric', year: '2-digit',\n    }),\n    timeFormatter: new Intl.DateTimeFormat('de-AT', {\n        hour: '2-digit', minute: '2-digit',\n    }),\n\n    init: function(data) {\n        if (svgcontainer !== null) {\n            svgWidth = svgcontainer.offsetWidth;\n        }\n\n        var widget = document.getElementById('PlannerWidget');\n        widget.innerHTML = '';\n\n        var PlannerWidget = d3.select(\"#PlannerWidget\");\n        PlannerWidget.selectAll('*').remove();\n        svgElement = PlannerWidget.append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n\n        planner.data = data;\n        if (planner.showMonthFlag === false) {\n            planner.startDate = moment.unix(data.startDate);\n            var date = new Date(data.endDate * 1000);\n            date.setHours(23);\n            date.setMinutes(59);\n            date = date.getTime();\n            planner.endDate = moment.unix(date / 1000);\n\n            planner.days = planner.endDate.diff(planner.startDate, 'days');\n            planner.months = planner.endDate.diff(planner.startDate, 'months') + 1;\n            planner.dayWidth = (svgWidth - (planner.padding * (planner.months - 1)) -\n                (planner.paddingleft + planner.paddingright)) / planner.days;\n            planner.monthWidth = (svgWidth - (planner.padding * (planner.months - 1)) -\n                (planner.paddingleft + planner.paddingright)) / planner.months;\n        }\n    },\n\n    getType: function(a) {\n        return a.type;\n    },\n\n    storeEvents: function(events) {\n        planner.storedEvents = new Map();\n        planner.storedMilestones = new Map();\n        for (let i = 0; i < events.length; i++) {\n            var date = new Date(events[i].startdate * 1000);\n            date.setHours(0);\n            date.setMinutes(0);\n            date = date.getTime();\n            if (events[i].type === \"Milestone\" || events[i].type === \"Meilenstein\") {\n                if (planner.storedMilestones.get(date)) {\n                    planner.storedMilestones.set(date, planner.storedMilestones.get(date) + 1);\n                } else {\n                    planner.storedMilestones.set(date, 1);\n                }\n            } else {\n                if (planner.storedEvents.get(date)) {\n                    planner.storedEvents.set(date, planner.storedEvents.get(date) + 1);\n                } else {\n                    planner.storedEvents.set(date, 1);\n                }\n            }\n        }\n    },\n\n    drawLoading: function() {\n        var img = '<img src=\"../../../pix/i/loading.gif\" ' +\n            'alt=\"LoadingImage\" style=\"width:48px;height:48px;\">';\n        var widget = document.getElementById('PlannerWidget');\n        widget.innerHTML = img + ' ' + planner.strings.loading_msg;\n    },\n\n    updateSvgHeight: function(height) {\n        document.querySelector('#PlannerWidget svg').setAttribute('height', height);\n    },\n\n    drawplanner: function() {\n        const y = planner.barPosY;\n        var date = planner.startDate.clone();\n        const onClick = function() {\n            const type = planner.showMonthFlag ? 'CLOSE' : 'OPEN';\n            log(type, 'MONTH');\n            const attr = this.hasAttribute('x') ? 'x' : 'x1';\n            planner.showMonth(d3.select(this).attr(attr));\n        };\n        for (var i = 0; i < planner.months; ++i) {\n            svgElement.append(\"line\")\n                .attr(\"x1\", planner.paddingleft + i * planner.monthWidth + i * planner.padding)\n                .attr(\"y1\", y)\n                .attr(\"x2\", planner.paddingleft + (i + 1) * planner.monthWidth + i * planner.padding)\n                .attr(\"y2\", y)\n                .attr(\"cursor\", \"pointer\")\n                .style(\"stroke\", \"#000\")\n                .style(\"stroke-width\", planner.barHeight)\n                .on(\"click\", onClick);\n\n            svgElement.append(\"text\")\n                .attr(\"x\", planner.paddingleft + i * planner.padding + i * planner.monthWidth + planner.monthWidth / 2)\n                .attr(\"y\", y)\n                .attr(\"dy\", \"6px\")\n                .attr(\"cursor\", \"pointer\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-weight\", \"normal\")\n                .style(\"font-family\", \"sans-serif\")\n                .attr(\"fill\", \"white\")\n                .text(date.format(\"MMM YYYY\"))\n                .on(\"click\", onClick);\n            date.add(1, \"months\");\n        }\n    },\n\n    drawMarker: function(items) {\n        items = items.filter(function(item) {\n            return planner.includedTypes.indexOf(item.type) !== -1\n                && (item.visible || planner.isteacher)\n                && (item.startdate >= planner.startDate.unix() && item.startdate <= planner.endDate.unix());\n        });\n\n        // Keep track of how many events occur on the same day and which days have the most.\n        const stackTracker = {\n            events: {},\n            milestones: {},\n            max: {\n                events: 0,\n                milestones: 0,\n            },\n        };\n\n        const\n            count = items.length,\n            markerPositions = new Array(count);\n\n        for (let i = 0; i < count; ++i) {\n            const\n                item = items[i],\n                itemDate = moment.unix(item.startdate),\n                monthOffset = itemDate.diff(planner.startDate, 'months'),\n                startDate = moment(itemDate).startOf('month'),\n                endDate = moment(itemDate).endOf('month'),\n                xPos = planner.paddingleft + monthOffset * planner.monthWidth\n                    + monthOffset * planner.padding + 2\n                    + ((planner.monthWidth - 4) / endDate.diff(startDate, 'days')) * itemDate.diff(startDate, 'days');\n            const\n                type = item.userid ? 'milestones' : 'events',\n                stackTrack = stackTracker[type],\n                currentStackCount = stackTrack[xPos] = (stackTrack[xPos] ?? 0) + 1;\n            if (currentStackCount > stackTracker.max[type]) {\n                stackTracker.max[type] = currentStackCount;\n            }\n            markerPositions[i] = {\n                x: xPos,\n                stackPos: currentStackCount,\n            };\n        }\n\n        const\n            circleRadius = 15, // The radius of the marker, excluding stroke width.\n            markerDiameter = circleRadius * 2,\n            tooltipHeight = markerDiameter,\n            needleLength = 40, // The length of the stroke connecting a marker with the date strip.\n            eventsStartY =\n                tooltipHeight\n                + needleLength - circleRadius\n                + stackTracker.max.events * markerDiameter,\n            milestonesStartY = eventsStartY + planner.barHeight;\n\n        planner.barPosY = eventsStartY + planner.barHeight / 2;\n\n        // Change SVG height according to the maximum number of events on the same day.\n        // Exclude milestones if there are none.\n        svgHeight = stackTracker.max.milestones === 0\n            ? milestonesStartY + circleRadius // Add some margin.\n            : milestonesStartY\n            + needleLength - circleRadius\n            + stackTracker.max.milestones * markerDiameter\n            + tooltipHeight;\n        planner.updateSvgHeight(svgHeight);\n\n        const startDate = new Date();\n        const endDate = new Date();\n        let index = 0;\n        // Stick with forEach() because it would cause to many grunt errors when changed to a loop :-| .\n        items.forEach(function(item) {\n            const i = index++;\n\n            startDate.setTime(item.startdate * 1000);\n            endDate.setTime(item.enddate * 1000);\n\n            const\n                xPos = markerPositions[i].x,\n                stackPos = markerPositions[i].stackPos;\n            let needleStart, needleEnd, yPos, tooltipY;\n            if (item.userid) { // Check if milestone.\n                needleStart = milestonesStartY;\n                needleEnd = needleStart + needleLength;\n                yPos = needleEnd + markerDiameter * (stackPos - 1);\n                tooltipY = needleEnd + (stackTracker.max.milestones - 1) * markerDiameter + tooltipHeight;\n            } else {\n                needleStart = eventsStartY;\n                needleEnd = needleStart - needleLength;\n                yPos = needleEnd - markerDiameter * (stackPos - 1);\n                tooltipY = needleEnd - (stackTracker.max.events - 1) * markerDiameter - tooltipHeight;\n            }\n\n            var anchor = \"middle\";\n            if (xPos < planner.paddingleft + 254.4) {\n                anchor = \"start\";\n            } else if (xPos > planner.paddingleft + 254.4 * 4) {\n                anchor = \"end\";\n            }\n\n            var tooltip = item.title + ' • '\n                + planner.dateFormatter.format(startDate) + ', '\n                + planner.timeFormatter.format(startDate) + ' – '\n                + planner.timeFormatter.format(endDate) + ' • '\n                + \"completed by \" + item.countcompleted + \" student(s)\";\n\n            var hover = svgElement.append(\"text\")\n                .attr(\"class\", \"hover\")\n                .attr(\"x\", xPos)\n                .attr(\"y\", tooltipY)\n                .attr(\"dy\", \"6px\")\n                .style(\"text-anchor\", anchor)\n                .style(\"font-size\", \"14px\")\n                .style(\"font-weight\", \"simple\")\n                .style(\"font-family\", \"sans-serif\")\n                .style(\"display\", \"none\")\n                .attr(\"fill\", \"black\")\n                .text(tooltip);\n\n            const\n                fill = planner.getColor(item),\n                stroke = item.mandatory ? \"#474747\" : fill;\n\n            if (stackPos <= 1) {\n                svgElement.append(\"line\")\n                    .attr(\"x1\", xPos)\n                    .attr(\"y1\", needleStart)\n                    .attr(\"x2\", xPos)\n                    .attr(\"y2\", needleEnd)\n                    .style(\"stroke\", stroke)\n                    .style(\"stroke-width\", 4)\n                    .attr(\"cursor\", \"pointer\")\n                    .on(\"click\", function() {\n                        planner.showModal(item);\n                    })\n                    .on(\"mouseover\", function() {\n                        hover.style(\"display\", null);\n                    })\n                    .on(\"mouseout\", function() {\n                        hover.style(\"display\", \"none\");\n                    });\n            }\n\n            svgElement.append(\"circle\")\n                .attr(\"cx\", xPos)\n                .attr(\"cy\", yPos)\n                .attr(\"r\", circleRadius)\n                .attr(\"fill\", fill)\n                .style(\"stroke\", stroke)\n                .style(\"stroke-width\", 3.5)\n                .attr(\"cursor\", \"pointer\")\n                .on(\"click\", function() {\n                    planner.showModal(item);\n                })\n                .on(\"mouseover\", function() {\n                    hover.style(\"display\", null);\n                })\n                .on(\"mouseout\", function() {\n                    hover.style(\"display\", \"none\");\n                });\n\n            const label = item.graded ? item.type[0] + \"*\" : item.type[0];\n            svgElement.append(\"text\")\n                .attr(\"x\", xPos)\n                .attr(\"y\", yPos)\n                .attr(\"dy\", \"6px\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-weight\", \"bold\")\n                .style(\"font-family\", \"sans-serif\")\n                .attr(\"fill\", \"#fefefe\")\n                .text(label)\n                .attr(\"cursor\", \"pointer\")\n                .on(\"click\", function() {\n                    planner.showModal(item);\n                })\n                .on(\"mouseover\", function() {\n                    hover.style(\"display\", null);\n                })\n                .on(\"mouseout\", function() {\n                    hover.style(\"display\", \"none\");\n                });\n        });\n    },\n\n    // Takes event data (as fetched from backend), and returns a hex code.\n    getColor: (() => {\n        const\n            now = Date.now() / 1000,\n            threshold = now + 604800; // Seven days in seconds.\n        return event => {\n            const end = event.enddate;\n            return (event.completed && \"#b2c204\") // Green.\n                || (end < now && (planner.isteacher && \"#a09e9e\" || \"#df3540\")) // Student → red; teacher → grey.\n                || (end <= threshold && \"#f9a606\") // Yellow/Orange\n                || \"#a09e9e\"; // Grey.\n        };\n    })(),\n\n    drawLegend: function(items) {\n        var legendcontainer = document.getElementById('planner_legend');\n        var svgWidth = 600;\n        var svgHeight = 100;\n        if (svgcontainer !== null) {\n            svgWidth = svgcontainer.offsetWidth;\n        }\n        d3.select(\"#planner_legend\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n\n        var start = planner.startDate.format(\"YYYY-MM-DD\");\n        var end = planner.endDate.format(\"YYYY-MM-DD\");\n\n        var legend = {};\n        var marker = {};\n\n        items.forEach(function(item) {\n            if (moment.unix(item.startdate) <= planner.endDate && (planner.isteacher || item.visible)) {\n                if (!(item.type in legend)) {\n                    legend[item.type] = 0;\n                }\n                var TmpDate = moment.unix(item.startdate)._d;\n                var year = String(TmpDate.getFullYear());\n                var month = String((TmpDate.getMonth() + 1));\n                var day = String(TmpDate.getDate());\n                if (month.length < 2) {\n                    month = '0' + month;\n                }\n                if (day.length < 2) {\n                    day = '0' + day;\n                }\n                var x = [year, month, day].join('-');\n                if (x < start || x > end) {\n                    return;\n                }\n\n                legend[item.type] = legend[item.type] + 1;\n                marker[item.type] = item.marker;\n            }\n        });\n\n        var filter = [];\n\n        var innerHTML = \"\";\n        for (var prop in legend) {\n            if (legend[prop] !== 0) {\n                filter.push(prop);\n                if (Object.prototype.hasOwnProperty.call(legend, prop)) {\n                    innerHTML += '<div class=\"d-inline-block\" style=\"padding: 5px 10px; font-size: 16px;\">'\n                        + '<div class=\"d-inline-block font-weight-bold text-center\" style=\"width: 36px; height: 36px;'\n                        + 'line-height: 32px; border-radius: 50%; border: 2px solid #444444; color: #000;'\n                        + 'background: #babdbf; margin-right: 6px;\">'\n                        + prop[0] + '</div>' + legend[prop] + ' ' + prop + '</div>';\n                }\n            }\n        }\n        innerHTML += \"<p class='ml-3 mb-0' style='font-size: 0.85em;'>\" + planner.strings.legend + \"</p>\";\n        planner.includeTypes = filter;\n        if (planner.includedTypes === null) {\n            planner.includedTypes = planner.includeTypes;\n        }\n        legendcontainer.innerHTML = innerHTML;\n    },\n\n    showMonth: function(xPos) {\n        const PlannerWidget = d3.select(\"#PlannerWidget\");\n        PlannerWidget.selectAll('circle').remove();\n        PlannerWidget.selectAll('line').remove();\n        PlannerWidget.selectAll('text').remove();\n\n        if (planner.months !== 1) {\n            planner.showMonthFlag = true;\n\n            const monthnumber = (xPos - planner.paddingleft) / (planner.monthWidth + planner.padding);\n            planner.startDate.add(monthnumber, \"months\");\n            if (planner.endDate > moment(planner.startDate).endOf('month')) {\n                planner.endDate = moment(planner.startDate).endOf('month');\n            }\n            planner.months = 1;\n            planner.monthWidth = svgWidth - (planner.paddingleft + planner.paddingright);\n\n            planner.drawLegend(planner.data.items);\n            planner.createMenu();\n            planner.drawMarker(planner.data.items);\n            planner.drawplanner();\n        } else {\n            planner.showMonthFlag = false;\n            planner.update();\n        }\n    },\n\n    showModal: function(item) {\n        if (planner.isteacher) {\n            log('OPEN', 'EVENT', null, item.id);\n            planner.createEventModal(item);\n        } else {\n            if ('userid' in item && 'completed' in item) {\n                // TODO add info for log plugin.\n                log('OPEN', 'MILESTONE', null, item.id);\n                planner.createMilestoneModal(item);\n\n            } else {\n                log('OPEN', 'EVENT', null, item.id);\n                planner.createEventCompletedModal(item);\n            }\n        }\n    },\n\n    createMenu: function() {\n        var menucontainer = document.getElementById('planner_menu');\n        var svgWidth = 600;\n        var svgHeight = 100;\n        if (menucontainer !== null) {\n            svgWidth = menucontainer.offsetWidth;\n        }\n        d3.select(\"#planner_menu\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n        menucontainer.innerHTML = '';\n\n        var form = document.createElement(\"form\");\n\n        form.setAttribute(\"style\", \"font-size: 16px; font-weight: normal; font-famiy: sans-serif\");\n        planner.includeTypes.forEach(function(item) {\n            var input = document.createElement(\"input\");\n            input.setAttribute(\"type\", \"checkbox\");\n            input.setAttribute(\"value\", item);\n            input.setAttribute(\"style\", \"margin: 8px 4px 8px 20px;\");\n            if (planner.includedTypes.includes(item)) {\n                input.checked = true;\n            }\n            input.addEventListener(\"change\", function() {\n                if (planner.includedTypes.includes(item)) {\n                    log('DESELECT', 'FILTER', item);\n                    planner.includedTypes = planner.includedTypes.filter(function(el) {\n                        return el !== item;\n                    });\n                } else {\n                    log('SELECT', 'FILTER', item);\n                    planner.includedTypes.push(item);\n                }\n                planner.update();\n            });\n\n            form.appendChild(input);\n            form.appendChild(document.createTextNode(item));\n        });\n\n        if (!planner.isteacher) {\n            var promises = Ajax.call([\n                {\n                    methodname: 'lytix_planner_allow_personalized_notifications',\n                    args: {contextid: planner.contextid, courseid: planner.courseid},\n                }\n            ]);\n            promises[0].done(function(response) {\n                if (response.allow) {\n                    form.appendChild(planner.addNotificationUserSettingsBtn());\n                }\n            }).fail(function(ex) {\n                window.console.log(ex);\n            });\n            form.appendChild(planner.addMilestoneBtn());\n        } else {\n            form.appendChild(planner.addNotificationCourseSettingsBtn());\n            form.appendChild(planner.addEventBtn());\n        }\n        menucontainer.appendChild(form);\n    },\n\n    resetModal: function() {\n        Yui.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        // Reload that changes in view are done and a new fresh modal is created.\n        planner.update();\n    },\n\n    checkDateandTime: function(MandatoryFlag, e, modal) {\n        var startdate;\n        var enddate;\n        for (var i = 0; i <= 5; i++) {\n            if (i === 0) {\n                startdate = 'startdate';\n                enddate = 'enddate';\n            } else {\n                startdate = 'date' + i;\n                enddate = 'endtime' + i;\n            }\n            let eventDate = new Date(document.getElementById('id_' + startdate + '_year').value,\n                document.getElementById('id_' + startdate + '_month').value - 1,\n                document.getElementById('id_' + startdate + '_day').value);\n            var timestampofevent = eventDate.getTime();\n            if ((timestampofevent / 1000) < planner.startDate.unix() || (timestampofevent / 1000) > planner.endDate.unix()) {\n                MandatoryFlag = false;\n                e.preventDefault();\n                var timeoutofrange = getString('timeoutofrange', 'lytix_planner');\n                $.when(timeoutofrange).done(function(localizedString) {\n                    modal.setBody(modal.getBody().innerHTML);\n                    modal.getBody().append(localizedString);\n                });\n            }\n            var starthour = parseInt(document.getElementById('id_' + startdate + '_hour').value);\n            var endhour = parseInt(document.getElementById('id_' + enddate + 'hour').value);\n            var endminute = parseInt(document.getElementById('id_' + enddate + 'minute').value);\n            var startminute = parseInt(document.getElementById('id_' + startdate + '_minute').value);\n            if ((endhour < starthour) || (starthour === endhour && endminute < startminute)) {\n                MandatoryFlag = false;\n                e.preventDefault();\n                var timesmaller = getString('time_smaller', 'lytix_planner');\n                $.when(timesmaller).done(function(localizedString) {\n                    modal.setBody(modal.getBody().innerHTML);\n                    modal.getBody().append(localizedString);\n                });\n            }\n            if (document.getElementById('id_moreevents').value == 1) {\n                break;\n            }\n        }\n        return MandatoryFlag;\n    },\n\n    createEventModal: function(item) {\n        var trigger = $('#create-modal');\n        var form = loadFragment('lytix_planner', 'new_event_form', planner.contextid, item);\n        var title = planner.strings.event;\n        ModalFactory.create({\n            type: ModalType,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                var MandatoryFlag = true;\n                if (document.getElementById('id_title').value === \"\") {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                }\n                MandatoryFlag = planner.checkDateandTime(MandatoryFlag, e, modal);\n                // Beasts.indexOf('bison').\n                let selectedOption =\n                    document.getElementById('id_type').options[document.getElementById('id_type').selectedIndex];\n                // Check mandatory fields.\n                if (selectedOption.text === \"Other\") {\n                    MandatoryFlag = false;\n                    if (document.getElementById('id_select_other_german').value === \"\" ||\n                        document.getElementById('id_select_other_english').value === \"\") {\n                        e.preventDefault();\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(planner.strings.type_required);\n                    } else {\n                        if (planner.includeTypes.includes(document.getElementById('id_select_other_german').value) ||\n                            planner.includeTypes.includes(document.getElementById('id_select_other_english').value)) {\n                            e.preventDefault();\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(planner.strings.type_exists);\n                        } else {\n                            MandatoryFlag = true;\n                        }\n                    }\n                }\n                if (MandatoryFlag) {\n                    // Call the webservice with formData as param.\n                    var promises = Ajax.call([\n                        {\n                            methodname: 'local_lytix_lytix_planner_event',\n                            args: {\n                                contextid: planner.contextid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].done(function() {\n                        if (!planner.includedTypes.includes(selectedOption.text)) {\n                            planner.includedTypes.push(selectedOption.text);\n                            planner.includedTypes = null;\n                        }\n                        planner.resetModal();\n                        planner.update();\n                    }).fail(function(ex) {\n                        // TODO Find solution to show error message in modal.\n                        window.console.log(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on('modal-save-delete-cancel:delete', function() {\n                var promises = Ajax.call([\n                {\n                    methodname: 'local_lytix_lytix_planner_delete_event',\n                    args: {\n                        contextid: planner.contextid, courseid: planner.courseid, userid: planner.userid, id: item.id},\n                }\n                ]);\n                promises[0].done(function(response) {\n                    if (response.success) {\n                        planner.resetModal();\n                        planner.update();\n                    }\n                }).fail(function(ex) {\n                    window.console.log(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'EVENT', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    createEventCompletedModal: function(item) {\n        var trigger = $('#create-modal');\n        // Set correct userid.\n        item.userid = planner.userid;\n        item.eventid = item.id;\n        var form = loadFragment('lytix_planner', 'new_event_completed_form', planner.contextid, item);\n\n        var title = planner.strings.event_completed;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                // Call the webservice with formData as param.\n                var promises = Ajax.call([\n                    {\n                        methodname: 'local_lytix_lytix_planner_event_completed',\n                        args: {\n                            contextid: planner.contextid,\n                            jsonformdata: JSON.stringify(formData)\n                        },\n                    }\n                ]);\n                promises[0].done(function() {\n                    if (!planner.includeTypes.includes(root.find('form')[0][7].value)) {\n                        planner.includeTypes.push(root.find('form')[0][7].value);\n                    }\n                    planner.resetModal();\n                }).fail(function(ex) {\n                    // TODO Find solution to show error message in modal.\n                    window.console.log(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                delete item.userid;\n                delete item.eventid;\n                log('CLOSE', 'EVENT', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    createUserSettingsModal: function() {\n        var trigger = $('#create-modal');\n        // Set correct userid.\n        var params = {};\n        params.userid = planner.userid;\n        params.courseid = planner.courseid;\n        var form = loadFragment('lytix_planner', 'new_user_notification_settings_form',\n            planner.contextid, params);\n\n        var title = planner.strings.open_settings;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                // Call the webservice with formData as param.\n                var promises = Ajax.call([\n                    {\n                        methodname: 'lytix_planner_store_user_notification_settings',\n                        args: {\n                            contextid: planner.contextid,\n                            courseid: planner.courseid,\n                            userid: planner.userid,\n                            jsonformdata: JSON.stringify(formData)\n                        },\n                    }\n                ]);\n                promises[0].done(function(response) {\n                    if (!response.success) {\n                        window.console.log(\"Error storing user notification settings!\");\n                    }\n                    planner.resetModal();\n                }).fail(function(ex) {\n                    window.console.log(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'SETTINGS');\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    createCourseSettingsModal: function() {\n        var trigger = $('#create-modal');\n        var form = loadFragment('lytix_planner', 'new_course_notification_settings_form',\n            planner.contextid, null);\n\n        var title = planner.strings.open_settings;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                var MandatoryField = true;\n                // Check mandatory fields.\n                if (document.getElementById('id_new_type').checked === true) {\n                    MandatoryField = false;\n                    if (document.getElementById('id_select_other_german').value === \"\" ||\n                        document.getElementById('id_select_other_english').value === \"\") {\n                        e.preventDefault();\n                        modal.setBody(modal.getBody().innerHTML);\n                        // TODO remove, is done by the modal.\n                        modal.getBody().append(planner.strings.type_required);\n                    } else {\n                        if (planner.includeTypes.includes(document.getElementById('id_select_other_german').value) ||\n                            planner.includeTypes.includes(document.getElementById('id_select_other_english').value)) {\n                            e.preventDefault();\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(planner.strings.type_exists);\n                        } else {\n                            MandatoryField = true;\n                        }\n                    }\n                }\n                planner.includeTypes.forEach(function(types) {\n                    if (document.getElementById('id_delete' + types) &&\n                        document.getElementById('id_delete' + types).checked === true) {\n                        MandatoryField = false;\n                        e.preventDefault();\n                        var typenotdeleteable = getString('type_not_deleteable', 'lytix_planner');\n                        $.when(typenotdeleteable).done(function(localizedString) {\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(localizedString);\n                        });\n                    }\n                });\n                if (document.getElementById('id_softlock').checked &&\n                    (document.getElementById('id_new_type').checked === false && MandatoryField) || MandatoryField) {\n                    // Call the webservice with formData as param.\n                    var promises = Ajax.call([\n                        {\n                            methodname: 'lytix_planner_store_course_notification_settings',\n                            args: {\n                                contextid: planner.contextid,\n                                courseid: planner.courseid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].done(function(response) {\n                        if (!response.success) {\n                            window.console.log(\"Error storing custom course settings!\");\n                        }\n                        planner.includedTypes = null;\n                        planner.resetModal();\n                        planner.update();\n                    }).fail(function(ex) {\n                        window.console.log(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'SETTINGS');\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    addMilestoneBtn: function() {\n        var item = {};\n        item.id = -1;\n        item.userid = planner.userid;\n        item.marker = 'M';\n        item.color = '#6495ED';\n\n        var addMilestoneBtn = document.createElement(\"button\");\n        addMilestoneBtn.setAttribute(\"class\", \"btn btn-primary\");\n        addMilestoneBtn.setAttribute(\"type\", \"button\");\n        addMilestoneBtn.setAttribute(\"value\", \"Add Milestone\");\n        addMilestoneBtn.setAttribute(\"data-action\", \"Add Milestone\");\n        addMilestoneBtn.setAttribute(\"style\", \"display: inline-block; margin: 4px 4px 4px 24px; float: right;\");\n        var textPresent = planner.strings.add_milestone;\n        $.when(textPresent).done(function(localizedString) {\n            addMilestoneBtn.appendChild(document.createTextNode(localizedString));\n        });\n        addMilestoneBtn.addEventListener(\"click\", function() {\n            log('OPEN', 'MILESTONE', null, item.id);\n            planner.createMilestoneModal(item);\n        });\n        return addMilestoneBtn;\n    },\n\n    addEventBtn: function() {\n        var item = {};\n        item.id = -1;\n        item.userid = planner.userid;\n        item.marker = 'L';\n        item.color = '#6495ED';\n        item.visible = 1;\n        var addEventBtn = document.createElement(\"button\");\n        addEventBtn.setAttribute(\"class\", \"btn btn-primary\");\n        addEventBtn.setAttribute(\"type\", \"button\");\n        addEventBtn.setAttribute(\"value\", \"Add Event\");\n        addEventBtn.setAttribute(\"data-action\", \"Add Event\");\n        addEventBtn.setAttribute(\"style\", \"display: inline-block; margin: 4px 4px 4px 24px; float: right;\");\n        var textPresent = planner.strings.add_event;\n        $.when(textPresent).done(function(localizedString) {\n            addEventBtn.appendChild(document.createTextNode(localizedString));\n        });\n        addEventBtn.addEventListener(\"click\", function() {\n            log('OPEN', 'EVENT', null, item.id);\n        });\n        addEventBtn.addEventListener(\"click\", function() {\n            planner.createEventModal(item);\n        });\n        return addEventBtn;\n    },\n\n    addNotificationUserSettingsBtn: function() {\n        var userSettingsBtn = document.createElement(\"button\");\n        userSettingsBtn.setAttribute(\"class\", \"btn btn-primary\");\n        userSettingsBtn.setAttribute(\"type\", \"button\");\n        userSettingsBtn.setAttribute(\"value\", \"notification_user_settings\");\n        userSettingsBtn.setAttribute(\"data-action\", \"notification_user_settings\");\n        userSettingsBtn.setAttribute(\"style\", \"display: inline-block; margin: 4px 4px 4px 24px; float: right;\");\n        var textPresent = planner.strings.open_settings;\n        $.when(textPresent).done(function(localizedString) {\n            userSettingsBtn.appendChild(document.createTextNode(localizedString));\n        });\n        userSettingsBtn.addEventListener(\"click\", function() {\n            log('OPEN', 'SETTINGS');\n            planner.createUserSettingsModal();\n        });\n        return userSettingsBtn;\n    },\n\n    addNotificationCourseSettingsBtn: function() {\n        var userSettingsBtn = document.createElement(\"button\");\n        userSettingsBtn.setAttribute(\"class\", \"btn btn-primary\");\n        userSettingsBtn.setAttribute(\"type\", \"button\");\n        userSettingsBtn.setAttribute(\"value\", \"notification_course_settings\");\n        userSettingsBtn.setAttribute(\"data-action\", \"notification_course_settings\");\n        userSettingsBtn.setAttribute(\"style\", \"display: inline-block; margin: 4px 4px 4px 24px; float: right;\");\n        var textPresent = planner.strings.open_settings;\n        $.when(textPresent).done(function(localizedString) {\n            userSettingsBtn.appendChild(document.createTextNode(localizedString));\n        });\n        userSettingsBtn.addEventListener(\"click\", function() {\n            log('OPEN', 'SETTINGS');\n            planner.createCourseSettingsModal();\n        });\n        return userSettingsBtn;\n    },\n\n    createMilestoneModal: function(item) {\n        var trigger = $('#create-modal');\n        var form = loadFragment('lytix_planner', 'new_milestone_form', planner.contextid, item);\n        var title = planner.strings.Milestone;\n        ModalFactory.create({\n            type: ModalType,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                var MandatoryFlag = true;\n                if (document.getElementById('id_title').value === \"\") {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                }\n                let milestoneDate = new Date(document.getElementById('id_startdate_year').value,\n                    document.getElementById('id_startdate_month').value - 1,\n                    document.getElementById('id_startdate_day').value);\n                var timestampofmilestone = milestoneDate.getTime();\n                if (timestampofmilestone < planner.startDate || timestampofmilestone > planner.endDate) {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                    var timeoutofrange = getString('timeoutofrange', 'lytix_planner');\n                    $.when(timeoutofrange).done(function(localizedString) {\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(localizedString);\n                    });\n                }\n                var starthour = parseInt(document.getElementById('id_startdate_hour').value);\n                var endhour = parseInt(document.getElementById('id_hour').value);\n                var endminute = parseInt(document.getElementById('id_minute').value);\n                var startminute = parseInt(document.getElementById('id_startdate_minute').value);\n                if ((endhour < starthour) || (starthour === endhour && endminute < startminute)) {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                    var timesmaller = getString('time_smaller', 'lytix_planner');\n                    $.when(timesmaller).done(function(localizedString) {\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(localizedString);\n                    });\n                }\n                if (MandatoryFlag) {\n                    // Call the webservice with formData as param.\n                    var promises = Ajax.call([\n                        {\n                            methodname: 'local_lytix_lytix_planner_milestone',\n                            args: {\n                                contextid: planner.contextid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].done(function() {\n                        if (!planner.includedTypes.includes(\"Milestone\")) {\n                            planner.includedTypes.push(\"Milestone\");\n                        }\n                        planner.resetModal();\n                    }).fail(function(ex) {\n                        // TODO Find solution to show error message in modal.\n                        window.console.log(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on('modal-save-delete-cancel:delete', function() {\n                var promises = Ajax.call([\n                    {\n                        methodname: 'local_lytix_lytix_planner_delete_milestone',\n                        args: {\n                            contextid: planner.contextid, courseid: planner.courseid, userid: planner.userid, id: item.id},\n                    }\n                ]);\n                promises[0].done(function(response) {\n                    if (response.success) {\n                        planner.resetModal();\n                        planner.update();\n                    }\n                }).fail(function(ex) {\n                    window.console.log(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'MILESTONE', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    renderModalFail: function(ex, id) {\n        var text = planner.strings.error_text + '<p>' + ex.message + '</p>';\n        $('#' + id + '.modal-body').html(text);\n    },\n\n    update: function() {\n        var urlParams = new URLSearchParams(window.location.search);\n        var id = 0;\n        if (urlParams.has('id')) {\n            id = urlParams.get('id');\n        }\n        Ajax.call([{\n            methodname: 'local_lytix_lytix_planner_get',\n            // XXX ‘isstudent’ in WS call is misleading, we had to reverse logic and check for teacher role instead.\n            // See issue: https://gitlab.tugraz.at/llt/moodledev/plugindev/lytix/-/issues/73\n            args: {id: id, contextid: planner.contextid, isstudent: !planner.isteacher}\n        }])[0]\n        .done(function(response) {\n            planner.init(response);\n            planner.storeEvents(response.items);\n            planner.drawLegend(planner.data.items);\n            planner.createMenu();\n            planner.drawMarker(planner.data.items);\n            planner.drawplanner();\n        })\n        .fail(function(ex) {\n            var text = planner.strings.error_text + '<p>' + ex.message + '</p>';\n            $('#planner_menu').html(text);\n        });\n    }\n};\n\nexport const init = async(contextid, courseid, userid, isteacher) => {\n    planner.isteacher = isteacher;\n\n    planner.strings = await getStrings({\n        lytix_planner: { // eslint-disable-line camelcase\n            identical: [\n                \"add_milestone\",\n                \"add_event\",\n                \"Milestone\",\n                \"event\",\n                \"event_completed\",\n                \"error_text\",\n                \"loading_msg\",\n                \"open_settings\",\n                \"type_exists\",\n                \"type_required\",\n                \"costum_settings\",\n                \"event_limit\",\n                \"legend\",\n            ],\n        },\n    });\n\n    planner.drawLoading();\n    planner.contextid = contextid;\n    planner.courseid = courseid;\n    planner.userid = userid;\n    planner.update();\n\n    log = makeLoggingFunction(userid, courseid, contextid, 'planner');\n\n    var resizeTimer;\n    window.addEventListener('resize', function() {\n        clearTimeout(resizeTimer);\n        resizeTimer = setTimeout(function() {\n            planner.update();\n        }, 250);\n    });\n};\n"],"names":["log","now","threshold","d3","window","moment","svgcontainer","document","getElementById","svgElement","svgHeight","svgWidth","planner","contextid","courseid","userid","isteacher","strings","isresizing","paddingleft","paddingright","padding","barHeight","days","months","startDate","endDate","daysWidth","monthWidth","data","showMonthFlag","includeTypes","includedTypes","storedEvents","Map","storedMilestones","dateFormatter","Intl","DateTimeFormat","day","month","year","timeFormatter","hour","minute","init","offsetWidth","innerHTML","PlannerWidget","select","selectAll","remove","append","attr","unix","date","Date","setHours","setMinutes","getTime","diff","dayWidth","getType","a","type","storeEvents","events","i","length","startdate","get","set","drawLoading","img","loading_msg","updateSvgHeight","height","querySelector","setAttribute","drawplanner","y","barPosY","clone","onClick","this","hasAttribute","showMonth","style","on","text","format","add","drawMarker","items","filter","item","indexOf","visible","stackTracker","milestones","max","count","markerPositions","Array","itemDate","monthOffset","startOf","endOf","xPos","stackTrack","currentStackCount","x","stackPos","eventsStartY","tooltipHeight","circleRadius","milestonesStartY","index","forEach","setTime","enddate","needleStart","needleEnd","yPos","tooltipY","anchor","tooltip","title","countcompleted","hover","fill","getColor","stroke","mandatory","showModal","label","graded","event","end","completed","drawLegend","legendcontainer","start","legend","marker","TmpDate","_d","String","getFullYear","getMonth","getDate","join","prop","push","Object","prototype","hasOwnProperty","call","monthnumber","createMenu","update","id","createEventModal","createMilestoneModal","createEventCompletedModal","menucontainer","form","createElement","input","includes","checked","addEventListener","el","appendChild","createTextNode","addNotificationCourseSettingsBtn","addEventBtn","Ajax","methodname","args","done","response","allow","addNotificationUserSettingsBtn","fail","ex","console","addMilestoneBtn","resetModal","use","M","core_formchangechecker","reset_form_dirty_state","checkDateandTime","MandatoryFlag","e","modal","timestampofevent","value","preventDefault","timeoutofrange","when","localizedString","setBody","getBody","starthour","parseInt","endhour","endminute","startminute","timesmaller","trigger","create","ModalType","body","setLarge","show","root","getRoot","ModalEvents","save","formData","find","serialize","selectedOption","options","selectedIndex","type_required","type_exists","jsonformdata","JSON","stringify","success","hidden","hide","destroy","cancel","eventid","event_completed","ModalFactory","types","SAVE_CANCEL","createUserSettingsModal","params","open_settings","createCourseSettingsModal","MandatoryField","typenotdeleteable","color","textPresent","add_milestone","add_event","userSettingsBtn","Milestone","timestampofmilestone","renderModalFail","error_text","message","html","urlParams","URLSearchParams","location","search","has","isstudent","lytix_planner","identical","clearTimeout","resizeTimer","setTimeout"],"mappings":"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"}