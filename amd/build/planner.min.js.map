{"version":3,"file":"planner.min.js","sources":["../src/planner.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {loadFragment} from 'core/fragment';\nimport Yui from 'core/yui';\nimport {get_string as getString} from 'core/str';\nimport {makeLoggingFunction} from 'lytix_logs/logs';\nimport ModalType from 'lytix_planner/modal_save_delete_cancel';\nimport {getStrings} from 'lytix_helper/widget';\n\nconst d3 = window.d3;\nvar moment = window.moment;\n\nvar svgcontainer = document.getElementById('PlannerWidget');\nvar svgElement = null;\n\nvar svgHeight = 250;\nvar svgWidth = 600;\n\nlet log; // Will be the logging function.\n\nvar planner = {\n\n    contextid: -1,\n    courseid: -1,\n    userid: -1,\n    isteacher: -1,\n    strings: null,\n\n    isresizing: false,\n\n    paddingleft: 20,\n    paddingright: 60,\n    padding: 4,\n    barHeight: 20,\n    days: 0,\n    months: 0,\n    startDate: null,\n    endDate: null,\n    daysWidth: 0,\n    monthWidth: 0,\n    data: null,\n    showMonthFlag: false,\n\n    includeTypes: null,\n    includedTypes: null,\n\n    storedEvents: new Map(),\n    storedMilestones: new Map(),\n\n    dateFormatter: new Intl.DateTimeFormat('de-AT', {\n        day: 'numeric', month: 'numeric', year: '2-digit',\n    }),\n    timeFormatter: new Intl.DateTimeFormat('de-AT', {\n        hour: '2-digit', minute: '2-digit',\n    }),\n    init: function(data) {\n        if (svgcontainer !== null) {\n            svgWidth = svgcontainer.offsetWidth;\n        }\n\n        var widget = document.getElementById('PlannerWidget');\n        widget.innerHTML = '';\n\n        var PlannerWidget = d3.select(\"#PlannerWidget\");\n        PlannerWidget.selectAll('*').remove();\n        svgElement = PlannerWidget.append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n\n        planner.data = data;\n        if (planner.showMonthFlag === false) {\n            planner.startDate = moment.unix(data.startDate);\n            var date = new Date(data.endDate * 1000);\n            date.setHours(23);\n            date.setMinutes(59);\n            date = date.getTime();\n            planner.endDate = moment.unix(date / 1000);\n\n            planner.days = planner.endDate.diff(planner.startDate, 'days');\n            planner.months = planner.endDate.diff(planner.startDate, 'months') + 1;\n            planner.dayWidth = (svgWidth - (planner.padding * (planner.months - 1)) -\n                (planner.paddingleft + planner.paddingright)) / planner.days;\n            planner.monthWidth = (svgWidth - (planner.padding * (planner.months - 1)) -\n                (planner.paddingleft + planner.paddingright)) / planner.months;\n        }\n    },\n    getType: function(a) {\n        return a.type;\n    },\n    storeEvents: function(events) {\n        planner.storedEvents = new Map();\n        planner.storedMilestones = new Map();\n        for (let i = 0; i < events.length; i++) {\n            var date = new Date(events[i].startdate * 1000);\n            date.setHours(0);\n            date.setMinutes(0);\n            date = date.getTime();\n            if (events[i].type === \"Milestone\" || events[i].type === \"Meilenstein\") {\n                if (planner.storedMilestones.get(date)) {\n                    planner.storedMilestones.set(date, planner.storedMilestones.get(date) + 1);\n                } else {\n                    planner.storedMilestones.set(date, 1);\n                }\n            } else {\n                if (planner.storedEvents.get(date)) {\n                    planner.storedEvents.set(date, planner.storedEvents.get(date) + 1);\n                } else {\n                    planner.storedEvents.set(date, 1);\n                }\n            }\n        }\n    },\n    drawLoading: function() {\n        var img = '<img src=\"../../../pix/i/loading.gif\" ' +\n            'alt=\"LoadingImage\" style=\"width:48px;height:48px;\">';\n        var widget = document.getElementById('PlannerWidget');\n        widget.innerHTML = img + ' ' + planner.strings.loading_msg;\n    },\n    updateSvgHeight: function(height) {\n        document.querySelector('#PlannerWidget svg').setAttribute('height', height);\n    },\n    drawplanner: function() {\n        const y = planner.barPosY;\n        var date = planner.startDate.clone();\n        const onClick = function() {\n            const type = planner.showMonthFlag ? 'CLOSE' : 'OPEN';\n            log(type, 'MONTH');\n            const attr = this.hasAttribute('x') ? 'x' : 'x1';\n            planner.showMonth(d3.select(this).attr(attr));\n        };\n        for (var i = 0; i < planner.months; ++i) {\n            svgElement.append(\"line\")\n                .attr(\"x1\", planner.paddingleft + i * planner.monthWidth + i * planner.padding)\n                .attr(\"y1\", y)\n                .attr(\"x2\", planner.paddingleft + (i + 1) * planner.monthWidth + i * planner.padding)\n                .attr(\"y2\", y)\n                .attr(\"cursor\", \"pointer\")\n                .style(\"stroke\", \"#000\")\n                .style(\"stroke-width\", planner.barHeight)\n                .on(\"click\", onClick);\n\n            svgElement.append(\"text\")\n                .attr(\"x\", planner.paddingleft + i * planner.padding + i * planner.monthWidth + planner.monthWidth / 2)\n                .attr(\"y\", y)\n                .attr(\"dy\", \"6px\")\n                .attr(\"cursor\", \"pointer\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-weight\", \"normal\")\n                .style(\"font-family\", \"sans-serif\")\n                .attr(\"fill\", \"white\")\n                .text(date.format(\"MMM YYYY\"))\n                .on(\"click\", onClick);\n            date.add(1, \"months\");\n        }\n    },\n\n    drawMarker: function(items) {\n        items = items.filter(function(item) {\n            return planner.includedTypes.indexOf(item.type) !== -1\n                && (item.visible || planner.isteacher)\n                && (item.startdate >= planner.startDate.unix() && item.startdate <= planner.endDate.unix());\n        });\n\n        // Keep track of how many events occur on the same day and which days have the most.\n        const stackTracker = {\n            events: {},\n            milestones: {},\n            max: {\n                events: 0,\n                milestones: 0,\n            },\n        };\n\n        const\n            count = items.length,\n            markerPositions = new Array(count);\n\n        for (let i = 0; i < count; ++i) {\n            const\n                item = items[i],\n                itemDate = moment.unix(item.startdate),\n                monthOffset = itemDate.diff(planner.startDate, 'months'),\n                startDate = moment(itemDate).startOf('month'),\n                endDate = moment(itemDate).endOf('month'),\n                xPos = planner.paddingleft + monthOffset * planner.monthWidth\n                    + monthOffset * planner.padding + 2\n                    + ((planner.monthWidth - 4) / endDate.diff(startDate, 'days')) * itemDate.diff(startDate, 'days');\n            const\n                type = item.userid ? 'milestones' : 'events',\n                stackTrack = stackTracker[type],\n                currentStackCount = stackTrack[xPos] = (stackTrack[xPos] ?? 0) + 1;\n            if (currentStackCount > stackTracker.max[type]) {\n                stackTracker.max[type] = currentStackCount;\n            }\n            markerPositions[i] = {\n                x: xPos,\n                stackPos: currentStackCount,\n            };\n        }\n\n        const\n            circleRadius = 15, // The radius of the marker, excluding stroke width.\n            markerDiameter = circleRadius * 2,\n            tooltipHeight = markerDiameter,\n            needleLength = 40, // The length of the stroke connecting a marker with the date strip.\n            eventsStartY =\n                tooltipHeight\n                + needleLength - circleRadius\n                + stackTracker.max.events * markerDiameter,\n            milestonesStartY = eventsStartY + planner.barHeight;\n\n        planner.barPosY = eventsStartY + planner.barHeight / 2;\n\n        // Change SVG height according to the maximum number of events on the same day.\n        // Exclude milestones if there are none.\n        svgHeight = stackTracker.max.milestones === 0\n            ? milestonesStartY + circleRadius // Add some margin.\n            : milestonesStartY\n            + needleLength - circleRadius\n            + stackTracker.max.milestones * markerDiameter\n            + tooltipHeight;\n        planner.updateSvgHeight(svgHeight);\n\n        const startDate = new Date();\n        const endDate = new Date();\n        let index = 0;\n        // Stick with forEach() because it would cause to many grunt errors when changed to a loop :-| .\n        items.forEach(function(item) {\n            const i = index++;\n\n            startDate.setTime(item.startdate * 1000);\n            endDate.setTime(item.enddate * 1000);\n\n            const\n                xPos = markerPositions[i].x,\n                stackPos = markerPositions[i].stackPos;\n            let needleStart, needleEnd, yPos, tooltipY;\n            if (item.userid) { // Check if milestone.\n                needleStart = milestonesStartY;\n                needleEnd = needleStart + needleLength;\n                yPos = needleEnd + markerDiameter * (stackPos - 1);\n                tooltipY = needleEnd + (stackTracker.max.milestones - 1) * markerDiameter + tooltipHeight;\n            } else {\n                needleStart = eventsStartY;\n                needleEnd = needleStart - needleLength;\n                yPos = needleEnd - markerDiameter * (stackPos - 1);\n                tooltipY = needleEnd - (stackTracker.max.events - 1) * markerDiameter - tooltipHeight;\n            }\n\n            var anchor = \"middle\";\n            if (xPos < planner.paddingleft + 254.4) {\n                anchor = \"start\";\n            } else if (xPos > planner.paddingleft + 254.4 * 4) {\n                anchor = \"end\";\n            }\n\n            var tooltip = item.title + ' • '\n                + planner.dateFormatter.format(startDate) + ', '\n                + planner.timeFormatter.format(startDate) + ' – '\n                + planner.timeFormatter.format(endDate) + ' • '\n                + \"completed by \" + item.countcompleted + \" student(s)\";\n\n            var hover = svgElement.append(\"text\")\n                .attr(\"class\", \"hover\")\n                .attr(\"x\", xPos)\n                .attr(\"y\", tooltipY)\n                .attr(\"dy\", \"6px\")\n                .style(\"text-anchor\", anchor)\n                .style(\"font-size\", \"14px\")\n                .style(\"font-weight\", \"simple\")\n                .style(\"font-family\", \"sans-serif\")\n                .style(\"display\", \"none\")\n                .attr(\"fill\", \"black\")\n                .text(tooltip);\n\n            const\n                fill = planner.getColor(item),\n                stroke = item.mandatory ? \"#474747\" : fill;\n\n            if (stackPos <= 1) {\n                svgElement.append(\"line\")\n                    .attr(\"x1\", xPos)\n                    .attr(\"y1\", needleStart)\n                    .attr(\"x2\", xPos)\n                    .attr(\"y2\", needleEnd)\n                    .style(\"stroke\", stroke)\n                    .style(\"stroke-width\", 4)\n                    .attr(\"cursor\", \"pointer\")\n                    .on(\"click\", function() {\n                        planner.showModal(item);\n                    })\n                    .on(\"mouseover\", function() {\n                        hover.style(\"display\", null);\n                    })\n                    .on(\"mouseout\", function() {\n                        hover.style(\"display\", \"none\");\n                    });\n            }\n\n            svgElement.append(\"circle\")\n                .attr(\"cx\", xPos)\n                .attr(\"cy\", yPos)\n                .attr(\"r\", circleRadius)\n                .attr(\"fill\", fill)\n                .style(\"stroke\", stroke)\n                .style(\"stroke-width\", 3.5)\n                .attr(\"cursor\", \"pointer\")\n                .on(\"click\", function() {\n                    planner.showModal(item);\n                })\n                .on(\"mouseover\", function() {\n                    hover.style(\"display\", null);\n                })\n                .on(\"mouseout\", function() {\n                    hover.style(\"display\", \"none\");\n                });\n\n            const label = item.graded ? item.type[0] + \"*\" : item.type[0];\n            svgElement.append(\"text\")\n                .attr(\"x\", xPos)\n                .attr(\"y\", yPos)\n                .attr(\"dy\", \"6px\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-weight\", \"bold\")\n                .style(\"font-family\", \"sans-serif\")\n                .attr(\"fill\", \"#fefefe\")\n                .text(label)\n                .attr(\"cursor\", \"pointer\")\n                .on(\"click\", function() {\n                    planner.showModal(item);\n                })\n                .on(\"mouseover\", function() {\n                    hover.style(\"display\", null);\n                })\n                .on(\"mouseout\", function() {\n                    hover.style(\"display\", \"none\");\n                });\n        });\n    },\n\n    // Takes event data (as fetched from backend), and returns a hex code.\n    getColor: (() => {\n        const\n            now = Date.now() / 1000,\n            threshold = now + 604800; // Seven days in seconds.\n        return event => {\n            const end = event.enddate;\n            return (event.completed && \"#b2c204\") // Green.\n                || (end < now && (planner.isteacher && \"#a09e9e\" || \"#df3540\")) // Student → red; teacher → grey.\n                || (end <= threshold && \"#f9a606\") // Yellow/Orange\n                || \"#a09e9e\"; // Grey.\n        };\n    })(),\n\n    drawLegend: function(items) {\n        var legendcontainer = document.getElementById('planner_legend');\n        var svgWidth = 600;\n        var svgHeight = 100;\n        if (svgcontainer !== null) {\n            svgWidth = svgcontainer.offsetWidth;\n        }\n        d3.select(\"#planner_legend\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n\n        var start = planner.startDate.format(\"YYYY-MM-DD\");\n        var end = planner.endDate.format(\"YYYY-MM-DD\");\n\n        var legend = {};\n        var marker = {};\n\n        items.forEach(function(item) {\n            if (moment.unix(item.startdate) <= planner.endDate && (planner.isteacher || item.visible)) {\n                if (!(item.type in legend)) {\n                    legend[item.type] = 0;\n                }\n                var TmpDate = moment.unix(item.startdate)._d;\n                var year = String(TmpDate.getFullYear());\n                var month = String((TmpDate.getMonth() + 1));\n                var day = String(TmpDate.getDate());\n                if (month.length < 2) {\n                    month = '0' + month;\n                }\n                if (day.length < 2) {\n                    day = '0' + day;\n                }\n                var x = [year, month, day].join('-');\n                if (x < start || x > end) {\n                    return;\n                }\n\n                legend[item.type] = legend[item.type] + 1;\n                marker[item.type] = item.marker;\n            }\n        });\n\n        var filter = [];\n\n        var innerHTML = \"\";\n        for (var prop in legend) {\n            if (legend[prop] !== 0) {\n                filter.push(prop);\n                if (Object.prototype.hasOwnProperty.call(legend, prop)) {\n                    innerHTML += '<div class=\"d-inline-block\" style=\"padding: 5px 10px; font-size: 16px;\">'\n                        + '<div class=\"d-inline-block font-weight-bold text-center\" style=\"width: 36px; height: 36px;'\n                        + 'line-height: 32px; border-radius: 50%; border: 2px solid #444444; color: #000;'\n                        + 'background: #babdbf; margin-right: 6px;\">'\n                        + prop[0] + '</div>' + legend[prop] + ' ' + prop + '</div>';\n                }\n            }\n        }\n        innerHTML += \"<p class='ml-3 mb-0' style='font-size: 0.85em;'>\" + planner.strings.legend + \"</p>\";\n        planner.includeTypes = filter;\n        if (planner.includedTypes === null) {\n            planner.includedTypes = planner.includeTypes;\n        }\n        legendcontainer.innerHTML = innerHTML;\n    },\n\n    showMonth: function(xPos) {\n        const PlannerWidget = d3.select(\"#PlannerWidget\");\n        PlannerWidget.selectAll('circle').remove();\n        PlannerWidget.selectAll('line').remove();\n        PlannerWidget.selectAll('text').remove();\n\n        if (planner.months !== 1) {\n            planner.showMonthFlag = true;\n\n            const monthnumber = (xPos - planner.paddingleft) / (planner.monthWidth + planner.padding);\n            planner.startDate.add(monthnumber, \"months\");\n            if (planner.endDate > moment(planner.startDate).endOf('month')) {\n                planner.endDate = moment(planner.startDate).endOf('month');\n            }\n            planner.months = 1;\n            planner.monthWidth = svgWidth - (planner.paddingleft + planner.paddingright);\n\n            planner.drawLegend(planner.data.items);\n            planner.createMenu();\n            planner.drawMarker(planner.data.items);\n            planner.drawplanner();\n        } else {\n            planner.showMonthFlag = false;\n            planner.update();\n        }\n    },\n\n    showModal: function(item) {\n        if (planner.isteacher) {\n            log('OPEN', 'EVENT', null, item.id);\n            planner.createEventModal(item);\n        } else {\n            if ('userid' in item && 'completed' in item) {\n                // TODO add info for log plugin.\n                log('OPEN', 'MILESTONE', null, item.id);\n                planner.createMilestoneModal(item);\n\n            } else {\n                log('OPEN', 'EVENT', null, item.id);\n                planner.createEventCompletedModal(item);\n            }\n        }\n    },\n\n    createMenu: function() {\n        var menucontainer = document.getElementById('planner_menu');\n        var svgWidth = 600;\n        var svgHeight = 100;\n        if (menucontainer !== null) {\n            svgWidth = menucontainer.offsetWidth;\n        }\n        d3.select(\"#planner_menu\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n        menucontainer.innerHTML = '';\n\n        var form = document.createElement(\"form\");\n\n        form.setAttribute(\"style\", \"font-size: 16px; font-weight: normal; font-famiy: sans-serif\");\n        planner.includeTypes.forEach(function(item) {\n            var input = document.createElement(\"input\");\n            input.setAttribute(\"type\", \"checkbox\");\n            input.setAttribute(\"value\", item);\n            input.setAttribute(\"style\", \"margin: 8px 4px 8px 20px;\");\n            if (planner.includedTypes.includes(item)) {\n                input.checked = true;\n            }\n            input.addEventListener(\"change\", function() {\n                if (planner.includedTypes.includes(item)) {\n                    log('DESELECT', 'FILTER', item);\n                    planner.includedTypes = planner.includedTypes.filter(function(el) {\n                        return el !== item;\n                    });\n                } else {\n                    log('SELECT', 'FILTER', item);\n                    planner.includedTypes.push(item);\n                }\n                planner.update();\n            });\n\n            form.appendChild(input);\n            form.appendChild(document.createTextNode(item));\n        });\n\n        if (!planner.isteacher) {\n            var promises = Ajax.call([\n                {\n                    methodname: 'lytix_planner_allow_personalized_notifications',\n                    args: {contextid: planner.contextid, courseid: planner.courseid},\n                }\n            ]);\n            promises[0].done(function(response) {\n                if (response.allow) {\n                    form.appendChild(planner.addNotificationUserSettingsBtn());\n                }\n            }).fail(function(ex) {\n                window.console.log(ex);\n            });\n            form.appendChild(planner.addMilestoneBtn());\n        } else {\n            form.appendChild(planner.addNotificationCourseSettingsBtn());\n            form.appendChild(planner.addEventBtn());\n        }\n        menucontainer.appendChild(form);\n    },\n\n    resetModal: function() {\n        Yui.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        // Reload that changes in view are done and a new fresh modal is created.\n        planner.update();\n    },\n\n    checkDateandTime: function(MandatoryFlag, e, modal) {\n        var startdate;\n        var enddate;\n        for (var i = 0; i <= 5; i++) {\n            if (i === 0) {\n                startdate = 'startdate';\n                enddate = 'enddate';\n            } else {\n                startdate = 'date' + i;\n                enddate = 'endtime' + i;\n            }\n            let eventDate = new Date(document.getElementById('id_' + startdate + '_year').value,\n                document.getElementById('id_' + startdate + '_month').value - 1,\n                document.getElementById('id_' + startdate + '_day').value);\n            var timestampofevent = eventDate.getTime();\n            if ((timestampofevent / 1000) < planner.startDate.unix() || (timestampofevent / 1000) > planner.endDate.unix()) {\n                MandatoryFlag = false;\n                e.preventDefault();\n                var timeoutofrange = getString('timeoutofrange', 'lytix_planner');\n                $.when(timeoutofrange).done(function(localizedString) {\n                    modal.setBody(modal.getBody().innerHTML);\n                    modal.getBody().append(localizedString);\n                });\n            }\n            var starthour = parseInt(document.getElementById('id_' + startdate + '_hour').value);\n            var endhour = parseInt(document.getElementById('id_' + enddate + 'hour').value);\n            var endminute = parseInt(document.getElementById('id_' + enddate + 'minute').value);\n            var startminute = parseInt(document.getElementById('id_' + startdate + '_minute').value);\n            if ((endhour < starthour) || (starthour === endhour && endminute < startminute)) {\n                MandatoryFlag = false;\n                e.preventDefault();\n                var timesmaller = getString('time_smaller', 'lytix_planner');\n                $.when(timesmaller).done(function(localizedString) {\n                    modal.setBody(modal.getBody().innerHTML);\n                    modal.getBody().append(localizedString);\n                });\n            }\n            if (document.getElementById('id_moreevents').value == 1) {\n                break;\n            }\n        }\n        return MandatoryFlag;\n    },\n\n    createEventModal: function(item) {\n        var trigger = $('#create-modal');\n        var form = loadFragment('lytix_planner', 'new_event_form', planner.contextid, item);\n        var title = planner.strings.event;\n        ModalFactory.create({\n            type: ModalType,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                var MandatoryFlag = true;\n                if (document.getElementById('id_title').value === \"\") {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                }\n                MandatoryFlag = planner.checkDateandTime(MandatoryFlag, e, modal);\n                // Beasts.indexOf('bison').\n                let selectedOption =\n                    document.getElementById('id_type').options[document.getElementById('id_type').selectedIndex];\n                // Check mandatory fields.\n                if (selectedOption.text === \"Other\") {\n                    MandatoryFlag = false;\n                    if (document.getElementById('id_select_other_german').value === \"\" ||\n                        document.getElementById('id_select_other_english').value === \"\") {\n                        e.preventDefault();\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(planner.strings.type_required);\n                    } else {\n                        if (planner.includeTypes.includes(document.getElementById('id_select_other_german').value) ||\n                            planner.includeTypes.includes(document.getElementById('id_select_other_english').value)) {\n                            e.preventDefault();\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(planner.strings.type_exists);\n                        } else {\n                            MandatoryFlag = true;\n                        }\n                    }\n                }\n                if (MandatoryFlag) {\n                    // Call the webservice with formData as param.\n                    var promises = Ajax.call([\n                        {\n                            methodname: 'local_lytix_lytix_planner_event',\n                            args: {\n                                contextid: planner.contextid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].done(function() {\n                        if (!planner.includedTypes.includes(selectedOption.text)) {\n                            planner.includedTypes.push(selectedOption.text);\n                            planner.includedTypes = null;\n                        }\n                        planner.resetModal();\n                        planner.update();\n                    }).fail(function(ex) {\n                        // TODO Find solution to show error message in modal.\n                        window.console.log(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on('modal-save-delete-cancel:delete', function() {\n                var promises = Ajax.call([\n                {\n                    methodname: 'local_lytix_lytix_planner_delete_event',\n                    args: {\n                        contextid: planner.contextid, courseid: planner.courseid, userid: planner.userid, id: item.id},\n                }\n                ]);\n                promises[0].done(function(response) {\n                    if (response.success) {\n                        planner.resetModal();\n                        planner.update();\n                    }\n                }).fail(function(ex) {\n                    window.console.log(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'EVENT', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    createEventCompletedModal: function(item) {\n        var trigger = $('#create-modal');\n        // Set correct userid.\n        item.userid = planner.userid;\n        item.eventid = item.id;\n        var form = loadFragment('lytix_planner', 'new_event_completed_form', planner.contextid, item);\n\n        var title = planner.strings.event_completed;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                // Call the webservice with formData as param.\n                var promises = Ajax.call([\n                    {\n                        methodname: 'local_lytix_lytix_planner_event_completed',\n                        args: {\n                            contextid: planner.contextid,\n                            jsonformdata: JSON.stringify(formData)\n                        },\n                    }\n                ]);\n                promises[0].done(function() {\n                    if (!planner.includeTypes.includes(root.find('form')[0][7].value)) {\n                        planner.includeTypes.push(root.find('form')[0][7].value);\n                    }\n                    planner.resetModal();\n                }).fail(function(ex) {\n                    // TODO Find solution to show error message in modal.\n                    window.console.log(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                delete item.userid;\n                delete item.eventid;\n                log('CLOSE', 'EVENT', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    createUserSettingsModal: function() {\n        var trigger = $('#create-modal');\n        // Set correct userid.\n        var params = {};\n        params.userid = planner.userid;\n        params.courseid = planner.courseid;\n        var form = loadFragment('lytix_planner', 'new_user_notification_settings_form',\n            planner.contextid, params);\n\n        var title = planner.strings.open_settings;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                // Call the webservice with formData as param.\n                var promises = Ajax.call([\n                    {\n                        methodname: 'lytix_planner_store_user_notification_settings',\n                        args: {\n                            contextid: planner.contextid,\n                            courseid: planner.courseid,\n                            userid: planner.userid,\n                            jsonformdata: JSON.stringify(formData)\n                        },\n                    }\n                ]);\n                promises[0].done(function(response) {\n                    if (!response.success) {\n                        window.console.log(\"Error storing user notification settings!\");\n                    }\n                    planner.resetModal();\n                }).fail(function(ex) {\n                    window.console.log(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'SETTINGS');\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    createCourseSettingsModal: function() {\n        var trigger = $('#create-modal');\n        var form = loadFragment('lytix_planner', 'new_course_notification_settings_form',\n            planner.contextid, null);\n\n        var title = planner.strings.open_settings;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                var MandatoryField = true;\n                // Check mandatory fields.\n                if (document.getElementById('id_new_type').checked === true) {\n                    MandatoryField = false;\n                    if (document.getElementById('id_select_other_german').value === \"\" ||\n                        document.getElementById('id_select_other_english').value === \"\") {\n                        e.preventDefault();\n                        modal.setBody(modal.getBody().innerHTML);\n                        // TODO remove, is done by the modal.\n                        modal.getBody().append(planner.strings.type_required);\n                    } else {\n                        if (planner.includeTypes.includes(document.getElementById('id_select_other_german').value) ||\n                            planner.includeTypes.includes(document.getElementById('id_select_other_english').value)) {\n                            e.preventDefault();\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(planner.strings.type_exists);\n                        } else {\n                            MandatoryField = true;\n                        }\n                    }\n                }\n                planner.includeTypes.forEach(function(types) {\n                    if (document.getElementById('id_delete' + types) &&\n                        document.getElementById('id_delete' + types).checked === true) {\n                        MandatoryField = false;\n                        e.preventDefault();\n                        var typenotdeleteable = getString('type_not_deleteable', 'lytix_planner');\n                        $.when(typenotdeleteable).done(function(localizedString) {\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(localizedString);\n                        });\n                    }\n                });\n                if (document.getElementById('id_softlock').checked &&\n                    (document.getElementById('id_new_type').checked === false && MandatoryField) || MandatoryField) {\n                    // Call the webservice with formData as param.\n                    var promises = Ajax.call([\n                        {\n                            methodname: 'lytix_planner_store_course_notification_settings',\n                            args: {\n                                contextid: planner.contextid,\n                                courseid: planner.courseid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].done(function(response) {\n                        if (!response.success) {\n                            window.console.log(\"Error storing custom course settings!\");\n                        }\n                        planner.includedTypes = null;\n                        planner.resetModal();\n                        planner.update();\n                    }).fail(function(ex) {\n                        window.console.log(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'SETTINGS');\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    addMilestoneBtn: function() {\n        var item = {};\n        item.id = -1;\n        item.userid = planner.userid;\n        item.marker = 'M';\n        item.color = '#6495ED';\n\n        var addMilestoneBtn = document.createElement(\"button\");\n        addMilestoneBtn.setAttribute(\"class\", \"btn btn-primary\");\n        addMilestoneBtn.setAttribute(\"type\", \"button\");\n        addMilestoneBtn.setAttribute(\"value\", \"Add Milestone\");\n        addMilestoneBtn.setAttribute(\"data-action\", \"Add Milestone\");\n        addMilestoneBtn.setAttribute(\"style\", \"display: inline-block; margin: 4px 4px 4px 24px; float: right;\");\n        var textPresent = planner.strings.add_milestone;\n        $.when(textPresent).done(function(localizedString) {\n            addMilestoneBtn.appendChild(document.createTextNode(localizedString));\n        });\n        addMilestoneBtn.addEventListener(\"click\", function() {\n            log('OPEN', 'MILESTONE', null, item.id);\n            planner.createMilestoneModal(item);\n        });\n        return addMilestoneBtn;\n    },\n\n    addEventBtn: function() {\n        var item = {};\n        item.id = -1;\n        item.userid = planner.userid;\n        item.marker = 'L';\n        item.color = '#6495ED';\n        item.visible = 1;\n        var addEventBtn = document.createElement(\"button\");\n        addEventBtn.setAttribute(\"class\", \"btn btn-primary\");\n        addEventBtn.setAttribute(\"type\", \"button\");\n        addEventBtn.setAttribute(\"value\", \"Add Event\");\n        addEventBtn.setAttribute(\"data-action\", \"Add Event\");\n        addEventBtn.setAttribute(\"style\", \"display: inline-block; margin: 4px 4px 4px 24px; float: right;\");\n        var textPresent = planner.strings.add_event;\n        $.when(textPresent).done(function(localizedString) {\n            addEventBtn.appendChild(document.createTextNode(localizedString));\n        });\n        addEventBtn.addEventListener(\"click\", function() {\n            log('OPEN', 'EVENT', null, item.id);\n        });\n        addEventBtn.addEventListener(\"click\", function() {\n            planner.createEventModal(item);\n        });\n        return addEventBtn;\n    },\n\n    addNotificationUserSettingsBtn: function() {\n        var userSettingsBtn = document.createElement(\"button\");\n        userSettingsBtn.setAttribute(\"class\", \"btn btn-primary\");\n        userSettingsBtn.setAttribute(\"type\", \"button\");\n        userSettingsBtn.setAttribute(\"value\", \"notification_user_settings\");\n        userSettingsBtn.setAttribute(\"data-action\", \"notification_user_settings\");\n        userSettingsBtn.setAttribute(\"style\", \"display: inline-block; margin: 4px 4px 4px 24px; float: right;\");\n        var textPresent = planner.strings.open_settings;\n        $.when(textPresent).done(function(localizedString) {\n            userSettingsBtn.appendChild(document.createTextNode(localizedString));\n        });\n        userSettingsBtn.addEventListener(\"click\", function() {\n            log('OPEN', 'SETTINGS');\n            planner.createUserSettingsModal();\n        });\n        return userSettingsBtn;\n    },\n\n    addNotificationCourseSettingsBtn: function() {\n        var userSettingsBtn = document.createElement(\"button\");\n        userSettingsBtn.setAttribute(\"class\", \"btn btn-primary\");\n        userSettingsBtn.setAttribute(\"type\", \"button\");\n        userSettingsBtn.setAttribute(\"value\", \"notification_course_settings\");\n        userSettingsBtn.setAttribute(\"data-action\", \"notification_course_settings\");\n        userSettingsBtn.setAttribute(\"style\", \"display: inline-block; margin: 4px 4px 4px 24px; float: right;\");\n        var textPresent = planner.strings.open_settings;\n        $.when(textPresent).done(function(localizedString) {\n            userSettingsBtn.appendChild(document.createTextNode(localizedString));\n        });\n        userSettingsBtn.addEventListener(\"click\", function() {\n            log('OPEN', 'SETTINGS');\n            planner.createCourseSettingsModal();\n        });\n        return userSettingsBtn;\n    },\n\n    createMilestoneModal: function(item) {\n        var trigger = $('#create-modal');\n        var form = loadFragment('lytix_planner', 'new_milestone_form', planner.contextid, item);\n        var title = planner.strings.Milestone;\n        ModalFactory.create({\n            type: ModalType,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function(e) {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                var MandatoryFlag = true;\n                if (document.getElementById('id_title').value === \"\") {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                }\n                let milestoneDate = new Date(document.getElementById('id_startdate_year').value,\n                    document.getElementById('id_startdate_month').value - 1,\n                    document.getElementById('id_startdate_day').value);\n                var timestampofmilestone = milestoneDate.getTime();\n                if (timestampofmilestone < planner.startDate || timestampofmilestone > planner.endDate) {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                    var timeoutofrange = getString('timeoutofrange', 'lytix_planner');\n                    $.when(timeoutofrange).done(function(localizedString) {\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(localizedString);\n                    });\n                }\n                var starthour = parseInt(document.getElementById('id_startdate_hour').value);\n                var endhour = parseInt(document.getElementById('id_hour').value);\n                var endminute = parseInt(document.getElementById('id_minute').value);\n                var startminute = parseInt(document.getElementById('id_startdate_minute').value);\n                if ((endhour < starthour) || (starthour === endhour && endminute < startminute)) {\n                    MandatoryFlag = false;\n                    e.preventDefault();\n                    var timesmaller = getString('time_smaller', 'lytix_planner');\n                    $.when(timesmaller).done(function(localizedString) {\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(localizedString);\n                    });\n                }\n                if (MandatoryFlag) {\n                    // Call the webservice with formData as param.\n                    var promises = Ajax.call([\n                        {\n                            methodname: 'local_lytix_lytix_planner_milestone',\n                            args: {\n                                contextid: planner.contextid,\n                                jsonformdata: JSON.stringify(formData)\n                            },\n                        }\n                    ]);\n                    promises[0].done(function() {\n                        if (!planner.includedTypes.includes(\"Milestone\")) {\n                            planner.includedTypes.push(\"Milestone\");\n                        }\n                        planner.resetModal();\n                    }).fail(function(ex) {\n                        // TODO Find solution to show error message in modal.\n                        window.console.log(ex);\n                        planner.resetModal();\n                    });\n                }\n            });\n            root.on('modal-save-delete-cancel:delete', function() {\n                var promises = Ajax.call([\n                    {\n                        methodname: 'local_lytix_lytix_planner_delete_milestone',\n                        args: {\n                            contextid: planner.contextid, courseid: planner.courseid, userid: planner.userid, id: item.id},\n                    }\n                ]);\n                promises[0].done(function(response) {\n                    if (response.success) {\n                        planner.resetModal();\n                        planner.update();\n                    }\n                }).fail(function(ex) {\n                    window.console.log(ex);\n                    planner.resetModal();\n                });\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'MILESTONE', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                planner.resetModal();\n            });\n        });\n    },\n\n    renderModalFail: function(ex, id) {\n        var text = planner.strings.error_text + '<p>' + ex.message + '</p>';\n        $('#' + id + '.modal-body').html(text);\n    },\n\n    update: function() {\n        var urlParams = new URLSearchParams(window.location.search);\n        var id = 0;\n        if (urlParams.has('id')) {\n            id = urlParams.get('id');\n        }\n        Ajax.call([{\n            methodname: 'local_lytix_lytix_planner_get',\n            // XXX ‘isstudent’ in WS call is misleading, we had to reverse logic and check for teacher role instead.\n            // See issue: https://gitlab.tugraz.at/llt/moodledev/plugindev/lytix/-/issues/73\n            args: {id: id, contextid: planner.contextid, isstudent: !planner.isteacher}\n        }])[0]\n        .done(function(response) {\n            planner.init(response);\n            planner.storeEvents(response.items);\n            planner.drawLegend(planner.data.items);\n            planner.createMenu();\n            planner.drawMarker(planner.data.items);\n            planner.drawplanner();\n        })\n        .fail(function(ex) {\n            var text = planner.strings.error_text + '<p>' + ex.message + '</p>';\n            $('#planner_menu').html(text);\n        });\n    }\n};\n\nexport const init = async(contextid, courseid, userid, isteacher) => {\n    planner.isteacher = isteacher;\n\n    planner.strings = await getStrings({\n        lytix_planner: { // eslint-disable-line camelcase\n            identical: [\n                \"add_milestone\",\n                \"add_event\",\n                \"Milestone\",\n                \"event\",\n                \"event_completed\",\n                \"error_text\",\n                \"loading_msg\",\n                \"open_settings\",\n                \"type_exists\",\n                \"type_required\",\n                \"costum_settings\",\n                \"event_limit\",\n                \"legend\",\n            ],\n        },\n    });\n\n    planner.drawLoading();\n    planner.contextid = contextid;\n    planner.courseid = courseid;\n    planner.userid = userid;\n    planner.update();\n\n    log = makeLoggingFunction(userid, courseid, contextid, 'planner');\n\n    var resizeTimer;\n    window.addEventListener('resize', function() {\n        clearTimeout(resizeTimer);\n        resizeTimer = setTimeout(function() {\n            planner.update();\n        }, 250);\n    });\n};\n"],"names":["d3","window","moment","svgcontainer","document","getElementById","svgElement","svgHeight","svgWidth","log","planner","contextid","courseid","userid","isteacher","strings","isresizing","paddingleft","paddingright","padding","barHeight","days","months","startDate","endDate","daysWidth","monthWidth","data","showMonthFlag","includeTypes","includedTypes","storedEvents","Map","storedMilestones","dateFormatter","Intl","DateTimeFormat","day","month","year","timeFormatter","hour","minute","init","offsetWidth","innerHTML","PlannerWidget","select","selectAll","remove","append","attr","unix","date","Date","setHours","setMinutes","getTime","diff","dayWidth","getType","a","type","storeEvents","events","i","length","startdate","get","set","drawLoading","img","loading_msg","updateSvgHeight","height","querySelector","setAttribute","drawplanner","y","barPosY","clone","onClick","this","hasAttribute","showMonth","style","on","text","format","add","drawMarker","items","filter","item","indexOf","visible","stackTracker","milestones","max","count","markerPositions","Array","itemDate","monthOffset","startOf","endOf","xPos","stackTrack","currentStackCount","x","stackPos","eventsStartY","tooltipHeight","circleRadius","milestonesStartY","index","forEach","setTime","enddate","needleStart","needleEnd","yPos","tooltipY","anchor","tooltip","title","countcompleted","hover","fill","getColor","stroke","mandatory","showModal","label","graded","now","threshold","event","end","completed","drawLegend","legendcontainer","start","legend","marker","TmpDate","_d","String","getFullYear","getMonth","getDate","join","prop","push","Object","prototype","hasOwnProperty","call","monthnumber","createMenu","update","id","createEventModal","createMilestoneModal","createEventCompletedModal","menucontainer","form","createElement","input","includes","checked","addEventListener","el","appendChild","createTextNode","addNotificationCourseSettingsBtn","addEventBtn","Ajax","methodname","args","done","response","allow","addNotificationUserSettingsBtn","fail","ex","console","addMilestoneBtn","resetModal","use","M","core_formchangechecker","reset_form_dirty_state","checkDateandTime","MandatoryFlag","e","modal","timestampofevent","value","preventDefault","timeoutofrange","when","localizedString","setBody","getBody","starthour","parseInt","endhour","endminute","startminute","timesmaller","trigger","create","ModalType","body","setLarge","show","root","getRoot","ModalEvents","save","formData","find","serialize","selectedOption","options","selectedIndex","type_required","type_exists","jsonformdata","JSON","stringify","success","hidden","hide","destroy","cancel","eventid","event_completed","ModalFactory","types","SAVE_CANCEL","createUserSettingsModal","params","open_settings","createCourseSettingsModal","MandatoryField","typenotdeleteable","color","textPresent","add_milestone","add_event","userSettingsBtn","Milestone","timestampofmilestone","renderModalFail","error_text","message","html","urlParams","URLSearchParams","location","search","has","isstudent","async","resizeTimer","lytix_planner","identical","clearTimeout","setTimeout"],"mappings":"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"}